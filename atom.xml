<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>No Programming, No Life!</title>
  <subtitle>I really love programming with Ruby, Java and JavaScript.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.morizyun.com/"/>
  <updated>2017-04-27T10:34:18.000Z</updated>
  <id>https://blog.morizyun.com/</id>
  
  <author>
    <name>morizyun</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Effective Procedures to Setup new Mac Sierra For Rubyist</title>
    <link href="https://blog.morizyun.com/blog/setup-procedure-develop-ruby-rails-mac-sierra/"/>
    <id>https://blog.morizyun.com/blog/setup-procedure-develop-ruby-rails-mac-sierra/</id>
    <published>2017-04-07T15:00:00.000Z</published>
    <updated>2017-04-27T10:34:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>This article describes effective procedures for Rubyists to setup new Mac OS Sierra.</p>
<a id="more"></a>
<h2 id="Install-some-applications"><a href="#Install-some-applications" class="headerlink" title="Install some applications"></a>Install some applications</h2><h3 id="For-development"><a href="#For-development" class="headerlink" title="For development"></a>For development</h3><ul>
<li><strong><a href="https://developer.apple.com/xcode/" target="_blank" rel="external">XCode</a></strong> : IDE for Swift and Objective-C</li>
<li><strong><a href="https://www.jetbrains.com/idea/" target="_blank" rel="external">IntelliJ IDEA the Java IDE</a></strong> : Capable and Ergonomic IDE for a lot of languages</li>
<li><strong><a href="https://www.iterm2.com/" target="_blank" rel="external">iTerm</a></strong> : Modern and functional terminal app</li>
<li><strong><a href="https://www.sourcetreeapp.com/" target="_blank" rel="external">SourceTree</a></strong> : Free Git Client</li>
<li><strong><a href="https://code.visualstudio.com/docs/editor/setup" target="_blank" rel="external">Visual Studio Code</a></strong> : Redefined Code Editor</li>
<li><strong><a href="https://www.virtualbox.org/wiki/Downloads" target="_blank" rel="external">VM VirtualBox</a></strong> : Manager for virtual machine</li>
<li><strong><a href="https://www.docker.com/products/docker-toolbox" target="_blank" rel="external">Docker Toolbox</a></strong> : Installer for docker tools</li>
</ul>
<h3 id="For-productivity"><a href="#For-productivity" class="headerlink" title="For productivity"></a>For productivity</h3><ul>
<li><strong><a href="https://freemacsoft.net/appcleaner/" target="_blank" rel="external">AppCleaner</a></strong> : Uninstaller for unwanted apps</li>
<li><strong><a href="https://www.boastr.net/" target="_blank" rel="external">Better Touch Tool</a></strong> : Improve your keyboard, mouse, trackpad and etc</li>
<li><strong><a href="https://getbitbar.com/" target="_blank" rel="external">BitBar - Put anything in your Mac OS X menu bar</a></strong></li>
<li><strong><a href="https://www.google.co.jp/intl/ja/chrome/browser/" target="_blank" rel="external">Chrome</a></strong> : Effective browser</li>
<li><strong><a href="https://kapeli.com/dash" target="_blank" rel="external">Dash for macOS</a></strong></li>
<li><strong><a href="https://docs.docker.com/docker-for-mac/install/" target="_blank" rel="external">Docker for Mac </a></strong></li>
<li><strong><a href="https://www.dropbox.com/" target="_blank" rel="external">Dropbox</a></strong> : Keeping your data to synchronize Dropbox server</li>
<li><strong><a href="http://www.enduranceapp.com/" target="_blank" rel="external">Endurance</a></strong> : Boost your Mac Battery</li>
<li><strong><a href="https://evernote.com/?var=2&amp;noredirect" target="_blank" rel="external">Evernote</a></strong> : Simplify cloud text editor</li>
<li><strong><a href="https://justgetflux.com/" target="_blank" rel="external">f.lux</a></strong> : Computer’s display adapt to the time of day</li>
<li><strong><a href="https://www.google.co.jp/ime/" target="_blank" rel="external">Google Japanese Input</a></strong> : IME for Japanese</li>
<li><strong><a href="https://www.amazon.co.jp/kindle-dbs/fd/kcp" target="_blank" rel="external">Kindle for Mac</a></strong> : Kindle Browser</li>
<li><strong><a href="https://www.tripmode.ch/" target="_blank" rel="external">TripMode</a></strong> : Reduce your mobile data consumption</li>
</ul>
<h2 id="Homebrew"><a href="#Homebrew" class="headerlink" title="Homebrew"></a>Homebrew</h2><p>Before any installation, you should approve Xcode license agreement by the following command:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo xcodebuild -license</div></pre></td></tr></table></figure>
<p>You should execute the following command to install <strong><a href="http://brew.sh/" target="_blank" rel="external">Homebrew</a></strong>:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</div></pre></td></tr></table></figure>
<p>If you are asked about Xcode Command line tool while installing with Homebrew, please install it.</p>
<h2 id="Oh-my-zsh"><a href="#Oh-my-zsh" class="headerlink" title="Oh-my-zsh"></a>Oh-my-zsh</h2><p>If you want to use a coftable Zsh customized by the community, let’s install<br><strong><a href="https://github.com/robbyrussell/oh-my-zsh" target="_blank" rel="external">robbyrussell/oh-my-zsh</a></strong>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</div></pre></td></tr></table></figure>
<h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><p>You should install Git command line tool:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ brew install git</div><div class="line">$ git config --global user.name &quot;USER_NAME&quot;</div><div class="line">$ git config --global user.email email@example.com</div><div class="line">$ git config --global tag.sort version:refname</div></pre></td></tr></table></figure>
<p>After installing Git, we recommend to set global <code>.gitignore</code>:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># generator about .gitignore</div><div class="line">$ brew install gibo</div><div class="line"></div><div class="line"># Set some unnecessary files of JetBrains and Mac to .gitignore</div><div class="line">$ gibo JetBrains OSX &gt; .gitignore</div><div class="line"></div><div class="line"># Set the .gitignore to set git global setting</div><div class="line">$ git config --global --add core.excludesfile &quot;$HOME/.gitignore&quot;</div></pre></td></tr></table></figure>
<p>You should set basic passwords to skip filling password by <code>vi ~/.netrc</code>:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">machine github.com</div><div class="line">login USERNAME</div><div class="line">password PASSWORD</div></pre></td></tr></table></figure>
<p>In addition, please add a alias <code>git push-f</code> to <code>vi ~/.gitconfig</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[alias]</div><div class="line">  push-f = push --force-with-lease</div></pre></td></tr></table></figure>
<h2 id="autojump"><a href="#autojump" class="headerlink" title="autojump"></a>autojump</h2><p>If you want to fill a path more quickly,<br><strong><a href="https://github.com/wting/autojump" target="_blank" rel="external">wting/autojump</a></strong> is one of the greatest solutions.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ brew install autojump</div></pre></td></tr></table></figure>
<p>After installing, set the following setting by <code>vi ~/.zshrc</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># autojump</div><div class="line">[[ -s $(brew --prefix)/etc/profile.d/autojump.sh ]] &amp;&amp; . $(brew --prefix)/etc/profile.d/autojump.sh</div></pre></td></tr></table></figure>
<p>After the setting, execute the following command to reflect the setting:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ source ~/.zshrc</div></pre></td></tr></table></figure>
<h2 id="Font-Ricty"><a href="#Font-Ricty" class="headerlink" title="Font Ricty"></a>Font Ricty</h2><p>Ricty is a fonts for programming, if you want to try it, please set the following command:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"># Installing Ricty</div><div class="line">$ brew install automake</div><div class="line">$ brew tap sanemat/font</div><div class="line">$ brew install Caskroom/cask/xquartz</div><div class="line">$ brew install ricty</div><div class="line"></div><div class="line"># Copy generated font information</div><div class="line">$ cp -f /usr/local/opt/ricty/share/fonts/Ricty*.ttf ~/Library/Fonts/</div><div class="line">$ fc-cache -vf</div><div class="line"></div><div class="line"># Setting about anti-alias</div><div class="line">$ defaults -currentHost write -globalDomain AppleFontSmoothing -int 2</div></pre></td></tr></table></figure>
<h2 id="rbenv"><a href="#rbenv" class="headerlink" title="rbenv"></a>rbenv</h2><p>To avoid installing unnecessary documents, add the following setting <code>vim ~/.gemrc</code>:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">install: --no-document</div><div class="line">update: --no-document</div></pre></td></tr></table></figure>
<p>After the above setting, let’s install the following rbenv and Ruby-build:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># Installing rbenv / ruby-build</div><div class="line">$ brew install rbenv ruby-build</div><div class="line"></div><div class="line"># Setting to installing gems when introducing new version</div><div class="line">$ git clone https://github.com/sstephenson/rbenv-default-gems.git ~/.rbenv/plugins/rbenv-default-gems</div><div class="line"></div><div class="line"># Setting default install gems</div><div class="line">$ echo &apos;bundler\nrails\npg\npry&apos; &gt; ~/.rbenv/default-gems</div></pre></td></tr></table></figure>
<p>Edit the following setting by <code>vi ~/.zshrc</code>:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># rbenv</div><div class="line">[[ -d ~/.rbenv  ]] &amp;&amp; \</div><div class="line">  export PATH=$&#123;HOME&#125;/.rbenv/bin:$&#123;PATH&#125; &amp;&amp; \</div><div class="line">  eval &quot;$(rbenv init -)&quot;</div></pre></td></tr></table></figure>
<p>The setting is reflected by the following command:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ source ~/.zshrc</div></pre></td></tr></table></figure>
<p>Install Ruby by rbenv:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># show list of ruby versions which is able to install</div><div class="line">$ rbenv install -l</div><div class="line"></div><div class="line"># Install latest ruby version(e.g. 2.4.0)</div><div class="line">$ rbenv install 2.4.0</div><div class="line">$ rbenv global 2.4.0</div></pre></td></tr></table></figure>
<h2 id="PostgreSQL"><a href="#PostgreSQL" class="headerlink" title="PostgreSQL"></a>PostgreSQL</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># Install PostgreSQL</div><div class="line">$ brew install postgresql</div><div class="line"></div><div class="line"># To have launchd start postgresql at login:</div><div class="line">ln -sfv /usr/local/opt/postgresql/*plist ~/Library/LaunchAgents</div><div class="line"></div><div class="line"># Then to load postgresql now:</div><div class="line">launchctl load ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist</div></pre></td></tr></table></figure>
<h2 id="Docker-Optional"><a href="#Docker-Optional" class="headerlink" title="Docker (Optional)"></a>Docker (Optional)</h2><p>I think that we will use <strong><a href="https://www.docker.com/" target="_blank" rel="external">Docker</a></strong> in the near feature.<br>If you agree with my opinion, please install some docker images:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ docker pull ruby:2.4.0</div><div class="line">$ docker pull postgres:latest</div><div class="line">$ docker pull redis:latest</div><div class="line">$ docker pull ubuntu:14.04</div></pre></td></tr></table></figure>
<p>After downloading the docker image, please set alias to <code>vi .zshrc</code>:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># Docker</div><div class="line">alias d=&apos;docker&apos;</div><div class="line">alias dc=&apos;docker-compose&apos;</div><div class="line">alias dm=&apos;docker-machine&apos;</div></pre></td></tr></table></figure>
<p>After setting, reflect the upper settings:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">source ~/.zshrc</div></pre></td></tr></table></figure>
<h2 id="Java-Optional"><a href="#Java-Optional" class="headerlink" title="Java (Optional)"></a>Java (Optional)</h2><p>Download JDK from <strong><a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="external">Java SE - Downloads / Oracle</a></strong> and install it.</p>
<p>After install JDK, you should install Maven &amp; gradle too.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">brew install homebrew/versions/maven32</div><div class="line">brew install gradle</div></pre></td></tr></table></figure>
<p>After that, please write the bellow code in .zshrc or .bashrc:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">export JAVA_HOME=`/usr/libexec/java_home -v 1.8`</div></pre></td></tr></table></figure>
<p>Please refer to <strong><a href="http://stackoverflow.com/questions/31215452/intellij-idea-importing-gradle-project-getting-java-home-not-defined-yet" target="_blank" rel="external">java - Intellij Idea: Importing Gradle project - getting JAVA_HOME not defined yet - Stack Overflow</a></strong> and set the SDK at the first start of IntelliJ Idea.</p>
<h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><h3 id="Change-function-keys"><a href="#Change-function-keys" class="headerlink" title="Change function keys"></a>Change function keys</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Application &gt; System Preferences &gt; Keybord &gt; Use all F1, F2, etc...</div></pre></td></tr></table></figure>
<h3 id="Change-shortcut-to-change-active-window"><a href="#Change-shortcut-to-change-active-window" class="headerlink" title="Change shortcut to change active window"></a>Change shortcut to change active window</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Application &gt; System Preferences &gt; Keybord &gt; Shortcut &gt; Keybord &gt; Move focus next window</div></pre></td></tr></table></figure>
<h3 id="Change-computer-name"><a href="#Change-computer-name" class="headerlink" title="Change computer name"></a>Change computer name</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Application &gt; System Preferences &gt; Sharing &gt; Computer Name</div></pre></td></tr></table></figure>
<h3 id="Change-cursor-speed"><a href="#Change-cursor-speed" class="headerlink" title="Change cursor speed"></a>Change cursor speed</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Application &gt; System Preferences &gt; Mouse &gt; Tracking Speed</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This article describes effective procedures for Rubyists to setup new Mac OS Sierra.&lt;/p&gt;
    
    </summary>
    
      <category term="Mac" scheme="https://blog.morizyun.com/categories/Mac/"/>
    
    
  </entry>
  
  <entry>
    <title>Generate Square Thmumblnail by mini_magick[Ruby]</title>
    <link href="https://blog.morizyun.com/blog/minimagick-square-thumbnail-ruby/"/>
    <id>https://blog.morizyun.com/blog/minimagick-square-thumbnail-ruby/</id>
    <published>2017-01-16T15:00:00.000Z</published>
    <updated>2017-04-01T06:07:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>In this article, I would like to show a sample code to generate square thumbnail image by using <strong><a href="https://github.com/minimagick/minimagick" target="_blank" rel="external">Minimagick</a></strong><br> which is a Ruby wrapper for ImageMagic.</p>
<a id="more"></a>
<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>Add the gem to your Gemfile &amp; run <code>bundle install</code>:</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gem <span class="string">'mini_magick'</span></div></pre></td></tr></table></figure>
<h2 id="Ruby-Code"><a href="#Ruby-Code" class="headerlink" title="Ruby Code"></a>Ruby Code</h2><p>In a sample source, I will show you following flow:</p>
<ul>
<li>(1) Download Sample Image</li>
<li>(2) Cut out a square thumbnail image by using Minimagick</li>
<li>(3) Save Image to file</li>
</ul>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">require</span> <span class="string">'open-uri'</span></div><div class="line"><span class="keyword">require</span> <span class="string">'mini_magick'</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">ImageOptimizer</span></span></div><div class="line">  <span class="class"><span class="keyword">class</span> &lt;&lt; self</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">resize</span><span class="params">(content, width, height, quality, output_path)</span></span></div><div class="line">      img = MiniMagick::Image.read(content)</div><div class="line">      w_original = img[<span class="symbol">:width</span>].to_f</div><div class="line">      h_original = img[<span class="symbol">:height</span>].to_f</div><div class="line"></div><div class="line">      <span class="comment"># check proportions</span></div><div class="line">      op_resize = <span class="keyword">if</span> w_original * height &lt; h_original * width</div><div class="line">                    <span class="string">"<span class="subst">#&#123;width.to_i&#125;</span>x"</span></div><div class="line">                  <span class="keyword">else</span></div><div class="line">                    <span class="string">"x<span class="subst">#&#123;height.to_i&#125;</span>"</span></div><div class="line">                  <span class="keyword">end</span></div><div class="line"></div><div class="line">      img.combine_options <span class="keyword">do</span> <span class="params">|i|</span></div><div class="line">        i.resize(op_resize)</div><div class="line">        i.gravity(<span class="symbol">:center</span>)</div><div class="line">        i.quality quality.to_s <span class="keyword">if</span> quality.to_i &gt; <span class="number">1</span> &amp;&amp; quality.to_i &lt; <span class="number">100</span></div><div class="line">        i.crop <span class="string">"<span class="subst">#&#123;width.to_i&#125;</span>x<span class="subst">#&#123;height.to_i&#125;</span>+0+0!"</span></div><div class="line">      <span class="keyword">end</span></div><div class="line"></div><div class="line">      img.write(output_path)</div><div class="line">    <span class="keyword">end</span></div><div class="line">  <span class="keyword">end</span></div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line">URL = <span class="string">"http://farm4.staticflickr.com/3319/3584524809_f791a000e0_z.jpg"</span></div><div class="line">OUT_PUT_FILE_PATH = <span class="string">'./out_thumb.jpg'</span></div><div class="line">WIDTH = <span class="number">300</span></div><div class="line">HEIGHT = <span class="number">300</span></div><div class="line">QUALITY = <span class="number">80</span></div><div class="line"></div><div class="line">content = open(URL)</div><div class="line">resized_content = ImageOptimizer.resize(content, WIDTH, HEIGHT, QUALITY, OUT_PUT_FILE_PATH)</div></pre></td></tr></table></figure>
<p>So, it is operation confirmation.</p>
<p><img src="/img/2017-01-17-minimagick-square-thumbnail-ruby_1.jpg" width="640" height="480" alt="Another dog"></p>
<p>The above image(640x480) was converted to the following square image(300x300):</p>
<p><img src="/img/2017-01-17-minimagick-square-thumbnail-ruby_2.jpg" width="300" height="300"></p>
<p>Happy Hacking!</p>
<h2 id="API-Document"><a href="#API-Document" class="headerlink" title="API Document"></a>API Document</h2><p><strong><a href="http://www.rubydoc.info/github/minimagick/minimagick" target="_blank" rel="external">Documentation for minimagick/minimagick</a></strong></p>
<h2 id="Special-Thanks"><a href="#Special-Thanks" class="headerlink" title="Special Thanks"></a>Special Thanks</h2><ul>
<li><a href="http://qiita.com/9m/items/0e551093ca06a9986fbf" target="_blank" rel="external">http://qiita.com/9m/i..</a></li>
<li><a href="http://blog.amacou.net/post/22382899258/%E3%81%A7%E3%81%8B%E3%81%84jpeg%E7%94%BB%E5%83%8F%E3%82%92minimagick%E3%81%A7%E9%AB%98%E9%80%9F%E3%81%AB%E3%82%B5%E3%83%A0%E3%83%8D%E3%82%A4%E3%83%AB%E5%8C%96%E3%83%AA%E3%82%B5%E3%82%A4%E3%82%BAcrop%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95" target="_blank" rel="external">http://blog.amacou.net/pos…</a></li>
<li><a href="https://github.com/minimagick/minimagick/issues/104" target="_blank" rel="external">https://github.com/minimagick/minimagick/issues/104</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;In this article, I would like to show a sample code to generate square thumbnail image by using &lt;strong&gt;&lt;a href=&quot;https://github.com/minimagick/minimagick&quot;&gt;Minimagick&lt;/a&gt;&lt;/strong&gt;&lt;br&gt; which is a Ruby wrapper for ImageMagic.&lt;/p&gt;
    
    </summary>
    
      <category term="Ruby" scheme="https://blog.morizyun.com/categories/Ruby/"/>
    
    
      <category term="Ruby" scheme="https://blog.morizyun.com/tags/Ruby/"/>
    
      <category term="MiniMagick" scheme="https://blog.morizyun.com/tags/MiniMagick/"/>
    
  </entry>
  
  <entry>
    <title>Scraping by using CasperJS[JavaScript]</title>
    <link href="https://blog.morizyun.com/blog/casper-js-scraping-headless-browser/"/>
    <id>https://blog.morizyun.com/blog/casper-js-scraping-headless-browser/</id>
    <published>2017-01-07T15:00:00.000Z</published>
    <updated>2017-04-01T06:07:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>It is a tips that you can use when you want to scrape a page using JavaScript.<br>Since <strong><a href="http://casperjs.org/" target="_blank" rel="external">CasperJS</a></strong> can be instaled easily by <code>npm</code>, it is recomended to use in sever side.</p>
<a id="more"></a>
<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>Installation command for CasperJS is as follows:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install casperjs -g</div></pre></td></tr></table></figure>
<h2 id="Source-Code"><a href="#Source-Code" class="headerlink" title="Source Code"></a>Source Code</h2><p>The following code is a a script to scrape web page by using CasperJS.<br>In this case, I tried to be able to scpecify URL to scrape and a destination to save scraped HTML.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// scrape.js</span></div><div class="line"><span class="keyword">var</span> casper = <span class="built_in">require</span>(<span class="string">'casper'</span>).create();</div><div class="line">casper.userAgent(<span class="string">'Mozilla/5.0 (Linux; Android 4.0.4; Galaxy Nexus Build/IMM76B) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.133 Mobile Safari/535.19'</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> url = casper.cli.args[<span class="number">0</span>];</div><div class="line"><span class="keyword">var</span> outputPath = casper.cli.args[<span class="number">1</span>];</div><div class="line"></div><div class="line">casper.start(url);</div><div class="line"></div><div class="line">casper.then(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  casper.wait(<span class="number">5000</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="comment">// Get HTML</span></div><div class="line">    <span class="keyword">var</span> html = <span class="keyword">this</span>.evaluate(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">      <span class="keyword">return</span> <span class="built_in">document</span>.querySelector(<span class="string">"html"</span>).outerHTML;</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    <span class="comment">// Save HTML</span></div><div class="line">    fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</div><div class="line">    fs.write(outputPath, html, <span class="string">'w'</span>);</div><div class="line">  &#125;</div><div class="line">&#125;);</div><div class="line"></div><div class="line">casper.run();</div></pre></td></tr></table></figure>
<p>After that, if you run the command below, HTML of your target URL will be saved.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">casperjs scrape.js https://google.com /tmp/html.txt --ssl-protocol=TLSv1</div></pre></td></tr></table></figure>
<p>Happy Hacking!</p>
<h2 id="Special-Thanks"><a href="#Special-Thanks" class="headerlink" title="Special Thanks"></a>Special Thanks</h2><ul>
<li><a href="http://takun71.hatenablog.com/entry/2014/10/15/154336" target="_blank" rel="external">http://takun71.hatenabl…</a></li>
<li><a href="https://github.com/PharaohKJ/scrape_5374/blob/master/mnt/capture-5374.js" target="_blank" rel="external">scrape_5374/capture-5374.js at master · PharaohKJ/scrape_5374</a></li>
<li><a href="http://docs.casperjs.org/en/latest/cli.html" target="_blank" rel="external">Using the command line — CasperJS 1.1.0-DEV documentation</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;It is a tips that you can use when you want to scrape a page using JavaScript.&lt;br&gt;Since &lt;strong&gt;&lt;a href=&quot;http://casperjs.org/&quot;&gt;CasperJS&lt;/a&gt;&lt;/strong&gt; can be instaled easily by &lt;code&gt;npm&lt;/code&gt;, it is recomended to use in sever side.&lt;/p&gt;
    
    </summary>
    
      <category term="Javascript" scheme="https://blog.morizyun.com/categories/Javascript/"/>
    
    
      <category term="JavaScript" scheme="https://blog.morizyun.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>PostgreSQL Tips [Data Size per Table, Reindex, NULLSLAST]</title>
    <link href="https://blog.morizyun.com/blog/postgresql-reindex-null-last/"/>
    <id>https://blog.morizyun.com/blog/postgresql-reindex-null-last/</id>
    <published>2017-01-06T15:00:00.000Z</published>
    <updated>2017-04-01T06:07:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>While using PosgreSQL, this is my note which I learned.</p>
<ul>
<li>Show data size per table/index in PostgreSQL</li>
<li>REINDEX command</li>
<li>Control sort with NULL</li>
</ul>
<a id="more"></a>
<h2 id="Show-data-size-per-table-index-in-PostgreSQL"><a href="#Show-data-size-per-table-index-in-PostgreSQL" class="headerlink" title="Show data size per table/index in PostgreSQL"></a>Show data size per table/index in PostgreSQL</h2><p>While using PostgreSQL DB, sometimes you may want to know which table/index is using capacity.</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> pgn.nspname, relname, pg_size_pretty(relpages::<span class="built_in">bigint</span> * <span class="number">8</span> * <span class="number">1024</span>) <span class="keyword">AS</span> <span class="keyword">size</span>, <span class="keyword">CASE</span> <span class="keyword">WHEN</span> relkind =</div><div class="line"><span class="string">'t'</span> <span class="keyword">THEN</span> (<span class="keyword">SELECT</span> pgd.relname <span class="keyword">FROM</span> pg_class pgd <span class="keyword">WHERE</span> pgd.reltoastrelid = pg.oid) <span class="keyword">WHEN</span> nspname =</div><div class="line"><span class="string">'pg_toast'</span> <span class="keyword">AND</span> relkind = <span class="string">'i'</span> <span class="keyword">THEN</span> (<span class="keyword">SELECT</span> pgt.relname <span class="keyword">FROM</span> pg_class pgt <span class="keyword">WHERE</span> <span class="keyword">SUBSTRING</span>(pgt.relname</div><div class="line"><span class="keyword">FROM</span> <span class="number">10</span>) = <span class="keyword">REPLACE</span>(<span class="keyword">SUBSTRING</span>(pg.relname <span class="keyword">FROM</span> <span class="number">10</span>), <span class="string">'_index'</span>, <span class="string">''</span>)) <span class="keyword">ELSE</span> (<span class="keyword">SELECT</span> pgc.relname <span class="keyword">FROM</span></div><div class="line">pg_class pgc <span class="keyword">WHERE</span> pg.reltoastrelid = pgc.oid) <span class="keyword">END</span>::<span class="built_in">varchar</span> <span class="keyword">AS</span> refrelname, <span class="keyword">CASE</span> <span class="keyword">WHEN</span> nspname =</div><div class="line"><span class="string">'pg_toast'</span> <span class="keyword">AND</span> relkind = <span class="string">'i'</span> <span class="keyword">THEN</span> (<span class="keyword">SELECT</span> pgts.relname <span class="keyword">FROM</span> pg_class pgts <span class="keyword">WHERE</span> pgts.reltoastrelid =</div><div class="line">(<span class="keyword">SELECT</span> pgt.oid <span class="keyword">FROM</span> pg_class pgt <span class="keyword">WHERE</span> <span class="keyword">SUBSTRING</span>(pgt.relname <span class="keyword">FROM</span> <span class="number">10</span>) = <span class="keyword">REPLACE</span>(<span class="keyword">SUBSTRING</span>(pg.relname</div><div class="line"><span class="keyword">FROM</span> <span class="number">10</span>), <span class="string">'_index'</span>, <span class="string">''</span>))) <span class="keyword">END</span> <span class="keyword">AS</span> relidxrefrelname, relfilenode, relkind, reltuples::<span class="built_in">bigint</span>, relpages</div><div class="line"><span class="keyword">FROM</span> pg_class pg, pg_namespace pgn <span class="keyword">WHERE</span> pg.relnamespace = pgn.oid <span class="keyword">AND</span> pgn.nspname <span class="keyword">NOT</span> <span class="keyword">IN</span></div><div class="line">(<span class="string">'information_schema'</span>, <span class="string">'pg_catalog'</span>) <span class="keyword">ORDER</span> <span class="keyword">BY</span> relpages <span class="keyword">DESC</span>;</div><div class="line"></div><div class="line"> nspname  |                     relname                     |    size    |       refrelname        |    relidxrefrelname     | relfilenode | relkind | reltuples | relpages</div><div class="line"><span class="comment">----------+-------------------------------------------------+------------+-------------------------+-------------------------+-------------+---------+-----------+----------</span></div><div class="line"> pg_toast | pg_toast_246538                                 | 1648 kB    | scrape_items            |                         |      246543 | t       |        51 |      206</div><div class="line"> pg_toast | pg_toast_2618                                   | 376 kB     | pg_rewrite              |                         |        2838 | t       |       206 |       47</div><div class="line"> pg_toast | pg_toast_246538_index                           | 56 kB      | pg_toast_246538         | scrape_items            |      246545 | i       |        79 |        7</div><div class="line">...</div></pre></td></tr></table></figure>
<p>Source of the above SQL is here:</p>
<p><strong><a href="https://wiki.postgresql.org/images/a/ab/Pganalyze_Lightning_talk.pdf" target="_blank" rel="external">Monitoring Postgres</a></strong></p>
<h2 id="REINDEX"><a href="#REINDEX" class="headerlink" title="REINDEX"></a>REINDEX</h2><p>PostgreSQL seems to have unnecessary data remaining index unless you delete record well.<br>If there is such kind of data, it is better to run <code>REINDEX</code> command, like this:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">REINDEX &#123; INDEX | TABLE | DATABASE | SYSTEM &#125; name [ FORCE ]</div></pre></td></tr></table></figure>
<h2 id="Excellent-tool-pg-repack"><a href="#Excellent-tool-pg-repack" class="headerlink" title="Excellent tool pg_repack"></a>Excellent tool pg_repack</h2><p>It would be nice to use <code>pg_repack</code> which rebuilding a bloated table / index and rearranging records order to a specified index.<br>It can run online because it does not keep locking.</p>
<p><a href="http://qiita.com/bwtakacy/items/3be7a3e1540ccef7c9e3" target="_blank" rel="external">http://qiita.com/bwtakac…</a></p>
<h2 id="Control-a-position-of-NULL-in-sort-order"><a href="#Control-a-position-of-NULL-in-sort-order" class="headerlink" title="Control a position of NULL in sort order"></a>Control a position of NULL in sort order</h2><p>Control a position of NULL in sort order:</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ORDER BY some_time DESC NULLS LAST</div></pre></td></tr></table></figure>
<p>By the way, the default of PostgreSQL is <code>NULLS FAST</code></p>
<p><a href="http://qiita.com/hanoopy/items/03f62de8b15bea195208" target="_blank" rel="external">http://qiita.com/hanoop…</a></p>
<p>Happy Hacking!</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;While using PosgreSQL, this is my note which I learned.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Show data size per table/index in PostgreSQL&lt;/li&gt;
&lt;li&gt;REINDEX command&lt;/li&gt;
&lt;li&gt;Control sort with NULL&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Postgresql" scheme="https://blog.morizyun.com/categories/Postgresql/"/>
    
    
      <category term="PostgreSQL" scheme="https://blog.morizyun.com/tags/PostgreSQL/"/>
    
  </entry>
  
  <entry>
    <title>ESLint with React.js &amp; ES6+</title>
    <link href="https://blog.morizyun.com/blog/eslint-react-js-es6-plus/"/>
    <id>https://blog.morizyun.com/blog/eslint-react-js-es6-plus/</id>
    <published>2017-01-02T15:00:00.000Z</published>
    <updated>2017-04-01T06:21:13.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://www.amazon.com/gp/product/B019HRGOPQ/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=B019HRGOPQ&linkCode=as2&tag=morizyun00-22" target="_blank" rel="external"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=B019HRGOPQ&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;"></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=B019HRGOPQ" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;">ESLint is a static lint tool for JavaScript. Before running your code, the tool find obvious bug.<br>In addtion, it helps to unify your code styles such as how to use parentheses and spaces, etc.<br>In this article, I will explain the ESLint configuration for checking React.js written with ES6+.</p>
<a id="more"></a>
<h2 id="Style-Guide"><a href="#Style-Guide" class="headerlink" title="Style Guide"></a>Style Guide</h2><p>Aribnb’s style guide is really great and easy to understand. ESLint also check your code based on the style guide.</p>
<ul>
<li>JavaScript: <strong><a href="https://github.com/airbnb/javascript/tree/master/react" target="_blank" rel="external">airbnb/javascript</a></strong></li>
<li>React.js: <strong><a href="https://github.com/airbnb/javascript/tree/master/react" target="_blank" rel="external">airbnb/javascript/react</a></strong></li>
</ul>
<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>Install following libraries:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install --save-dev eslint babel-eslint eslint-plugin-import eslint-plugin-jsx-a11y eslint-plugin-react</div></pre></td></tr></table></figure>
<h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><p>ESLint configuration is as follows:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// .eslint.json</span></div><div class="line">&#123;</div><div class="line">  <span class="string">"extends"</span>: <span class="string">"airbnb"</span>,</div><div class="line">  <span class="string">"parser"</span>: <span class="string">"babel-eslint"</span>,</div><div class="line">  <span class="string">"env"</span>: &#123;</div><div class="line">    <span class="string">"browser"</span>: <span class="literal">true</span></div><div class="line">  &#125;,</div><div class="line">  <span class="string">"ecmaFeatures"</span>: &#123;</div><div class="line">    <span class="string">"classes"</span>: <span class="literal">true</span>,</div><div class="line">    <span class="string">"jsx"</span>: <span class="literal">true</span></div><div class="line">  &#125;,</div><div class="line">  <span class="string">"plugins"</span>: [</div><div class="line">    <span class="string">"react"</span>,</div><div class="line">    <span class="string">"jsx-a11y"</span>,</div><div class="line">    <span class="string">"import"</span></div><div class="line">  ],</div><div class="line">  <span class="string">"extends"</span>: [<span class="string">"eslint"</span>, <span class="string">"eslint:recommended"</span>, <span class="string">"plugin:react/recommended"</span>],</div><div class="line">  <span class="string">"parserOptions"</span>: &#123;</div><div class="line">    <span class="string">"ecmaVersion"</span>: <span class="number">7</span>,</div><div class="line">    <span class="string">"sourceType"</span>: <span class="string">"module"</span>,</div><div class="line">    <span class="string">"ecmaFeatures"</span>: &#123;</div><div class="line">      <span class="string">"jsx"</span>: <span class="literal">true</span></div><div class="line">    &#125;</div><div class="line">  &#125;,</div><div class="line">  <span class="string">"rules"</span>: &#123;</div><div class="line">    <span class="string">"arrow-body-style"</span>: <span class="string">"error"</span>,</div><div class="line">    <span class="string">"arrow-parens"</span>: <span class="string">"error"</span>,</div><div class="line">    <span class="string">"arrow-spacing"</span>: <span class="string">"error"</span>,</div><div class="line">    <span class="string">"eqeqeq"</span>: <span class="string">"error"</span>,</div><div class="line">    <span class="string">"generator-star-spacing"</span>: <span class="string">"error"</span>,</div><div class="line">    <span class="string">"no-duplicate-imports"</span>: <span class="string">"error"</span>,</div><div class="line">    <span class="string">"no-eq-null"</span>: <span class="string">"error"</span>,</div><div class="line">    <span class="string">"no-undefined"</span>: <span class="string">"error"</span>,</div><div class="line">    <span class="string">"no-useless-computed-key"</span>: <span class="string">"error"</span>,</div><div class="line">    <span class="string">"no-useless-constructor"</span>: <span class="string">"error"</span>,</div><div class="line">    <span class="string">"no-useless-rename"</span>: <span class="string">"error"</span>,</div><div class="line">    <span class="string">"no-var"</span>: <span class="string">"error"</span>,</div><div class="line">    <span class="string">"object-shorthand"</span>: <span class="string">"error"</span>,</div><div class="line">    <span class="string">"prefer-arrow-callback"</span>: <span class="string">"error"</span>,</div><div class="line">    <span class="string">"prefer-const"</span>: <span class="string">"error"</span>,</div><div class="line">    <span class="string">"prefer-rest-params"</span>: <span class="string">"error"</span>,</div><div class="line">    <span class="string">"prefer-spread"</span>: <span class="string">"error"</span>,</div><div class="line">    <span class="string">"prefer-template"</span>: <span class="string">"error"</span>,</div><div class="line">    <span class="string">"rest-spread-spacing"</span>: <span class="string">"error"</span>,</div><div class="line">    <span class="string">"semi"</span>: <span class="string">"error"</span>,</div><div class="line">    <span class="string">"template-curly-spacing"</span>: <span class="string">"error"</span>,</div><div class="line">    <span class="string">"yield-star-spacing"</span>: <span class="string">"error"</span></div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Please see moore detail <strong><a href="http://eslint.org/docs/user-guide/configuring" target="_blank" rel="external">Configuring ESLint</a></strong>.</p>
<h2 id="Usage-in-Command-Line"><a href="#Usage-in-Command-Line" class="headerlink" title="Usage in Command Line"></a>Usage in Command Line</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./node_modules/bin/eslint sample.js</div></pre></td></tr></table></figure>
<h2 id="Usage-in-overcommit"><a href="#Usage-in-overcommit" class="headerlink" title="Usage in overcommit"></a>Usage in overcommit</h2><p><a href="https://github.com/brigade/overcommit" target="_blank" rel="external">overcommit</a> is a git hook management tool which can execute various command before git commit, push or etc.<br>The following configuration is how to use ESLint with overcommit.</p>
<p>At first, overcommit configuration like this:</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># .overcommit.yml (Add following comfigugration)</span></div><div class="line"><span class="attr">PreCommit:</span></div><div class="line">  <span class="comment"># Style Check for JavaScript</span></div><div class="line"><span class="attr">  EsLint:</span></div><div class="line"><span class="attr">    enabled:</span> <span class="literal">true</span></div><div class="line"><span class="attr">    command:</span> <span class="string">['./client/node_modules/.bin/eslint',</span> <span class="string">'client/components/*'</span><span class="string">,</span> <span class="string">'-c'</span><span class="string">,</span> <span class="string">'client/.eslintrc.json'</span><span class="string">]</span></div><div class="line"><span class="attr">    include:</span> <span class="string">'**/*.jsx'</span></div></pre></td></tr></table></figure>
<p>Ater the configuration, execute <code>bundle exec overcommit --sign</code>, so ESLint will be executed automatically before <code>git push</code>.</p>
<h2 id="Usage-in-wercker"><a href="#Usage-in-wercker" class="headerlink" title="Usage in wercker"></a>Usage in wercker</h2><p>The configuration of free CI <strong><a href="http://www.wercker.com/" target="_blank" rel="external">wercker</a></strong> is as follows:</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="attr">eslint:</span></div><div class="line"><span class="attr">  steps:</span></div><div class="line"><span class="attr">    - bundle-install:</span></div><div class="line"><span class="attr">      jobs:</span> <span class="number">4</span></div><div class="line"></div><div class="line"><span class="attr">    - install-packages:</span></div><div class="line"><span class="attr">      name:</span> <span class="string">Install</span> <span class="string">node.js,</span> <span class="string">build-essential,</span> <span class="string">libpq-dev</span></div><div class="line"><span class="attr">      packages:</span> <span class="string">build-essential</span> <span class="string">libpq-dev</span> <span class="string">nodejs</span> <span class="string">npm</span> <span class="string">nodejs-legacy</span></div><div class="line"></div><div class="line"><span class="attr">    - script:</span></div><div class="line"><span class="attr">      name:</span> <span class="string">NPM</span> <span class="string">install</span></div><div class="line"><span class="attr">      code:</span> <span class="string">npm</span> <span class="string">install</span> <span class="bullet">-D</span></div><div class="line"></div><div class="line"><span class="attr">    - script:</span></div><div class="line"><span class="attr">      name:</span> <span class="string">Run</span> <span class="string">ESLint</span></div><div class="line"><span class="attr">      code:</span> <span class="string">eslint</span> <span class="string">components/*</span> <span class="bullet">-c</span> <span class="string">.eslintrc.json</span></div></pre></td></tr></table></figure>
<p>Happy Hacking!</p>
<h2 id="Special-Thanks"><a href="#Special-Thanks" class="headerlink" title="Special Thanks"></a>Special Thanks</h2><ul>
<li><a href="http://qiita.com/mysticatea/items/f523dab04a25f617c87d" target="_blank" rel="external">http://qiita.com/mysticat…</a></li>
<li><a href="http://qiita.com/tkrkt/items/b3b624ef32e05bd6bf55" target="_blank" rel="external">http://qiita.com/tkrkt/i…</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://www.amazon.com/gp/product/B019HRGOPQ/ref=as_li_qf_sp_asin_il?ie=UTF8&amp;camp=247&amp;creative=1211&amp;creativeASIN=B019HRGOPQ&amp;linkCode=as2&amp;tag=morizyun00-22&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&amp;ASIN=B019HRGOPQ&amp;Format=_SL160_&amp;ID=AsinImage&amp;MarketPlace=JP&amp;ServiceVersion=20070822&amp;WS=1&amp;tag=morizyun00-22&quot; width=&quot;150&quot; style=&quot;float: left; margin: 0 20px 20px 0;&quot; &gt;&lt;/a&gt;&lt;img src=&quot;http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&amp;l=as2&amp;o=9&amp;a=B019HRGOPQ&quot; width=&quot;1&quot; height=&quot;1&quot; border=&quot;0&quot; alt=&quot;&quot; style=&quot;border:none !important; margin:0px !important;&quot; /&gt;ESLint is a static lint tool for JavaScript. Before running your code, the tool find obvious bug.&lt;br&gt;In addtion, it helps to unify your code styles such as how to use parentheses and spaces, etc.&lt;br&gt;In this article, I will explain the ESLint configuration for checking React.js written with ES6+.&lt;/p&gt;
    
    </summary>
    
      <category term="React.js" scheme="https://blog.morizyun.com/categories/React-js/"/>
    
    
  </entry>
  
  <entry>
    <title>Wonderful react-bootstrap! We can use Bootstrap as a component!</title>
    <link href="https://blog.morizyun.com/blog/react-bootstrap-javascript-css-framework/"/>
    <id>https://blog.morizyun.com/blog/react-bootstrap-javascript-css-framework/</id>
    <published>2017-01-01T15:00:00.000Z</published>
    <updated>2017-04-01T06:21:22.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong><a href="https://react-bootstrap.github.io" target="_blank" rel="external">React-Bootstrap</a></strong> is a library that can handle Bootstrap as a component of React.js.<br>By using this you can build code with a sense of combining React.js components, not Bootstrap’s CSS.<br>Also, as a whole your code becomes clearer, maintenance costs are suppressed as well!</p>
<a id="more"></a>
<h2 id="Merit"><a href="#Merit" class="headerlink" title="Merit"></a>Merit</h2><ul>
<li>A Whole code becomes clearer</li>
<li>We don’t need to remember Bootstrap CSS. We just build by React component.</li>
<li>When combining JS such as Modal can also be treated as a component</li>
</ul>
<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>The following code is the library istallation command:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install react-bootstrap --save</div></pre></td></tr></table></figure>
<h2 id="Load-CSS"><a href="#Load-CSS" class="headerlink" title="Load CSS"></a>Load CSS</h2><p><strong>[React-Bootstrap] (<a href="https://react-bootstrap.github.io" target="_blank" rel="external">https://react-bootstrap.github.io</a>)</strong> does not include Bootstrap CSS, so we need to load CSS by yourself.<br>In my opinion, it is better to load CSS yourself because we can use our favorite theme. Also we can manage the CSS by <code>npm</code>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;!-- Latest compiled and minified CSS --&gt;</div><div class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/latest/css/bootstrap.min.css&quot;&gt;</div><div class="line"></div><div class="line">&lt;!-- Optional theme --&gt;</div><div class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/latest/css/bootstrap-theme.min.css&quot;&gt;</div></pre></td></tr></table></figure>
<h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><h3 id="Navigation-Bar"><a href="#Navigation-Bar" class="headerlink" title="Navigation Bar"></a>Navigation Bar</h3><p><img src="/img/2017-01-02-react-bootstrap-javascript-css-framework_1.jpg" width="640" height="56"></p>
<p>A usual Bootstrap navigation bar will be the following code:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// components/NavigationSample.jsx</span></div><div class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</div><div class="line"></div><div class="line"><span class="keyword">export</span> NavigationSample <span class="class"><span class="keyword">class</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</div><div class="line">  render () &#123;</div><div class="line">    <span class="keyword">return</span> (</div><div class="line">      <span class="xml"><span class="tag">&lt;<span class="name">Grid</span>&gt;</span></span></div><div class="line">        <span class="tag">&lt;<span class="name">Row</span> <span class="attr">className</span>=<span class="string">"show-grid"</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">Col</span> <span class="attr">xs</span>=<span class="string">&#123;12&#125;</span> <span class="attr">md</span>=<span class="string">&#123;8&#125;</span>&gt;</span><span class="tag">&lt;<span class="name">code</span>&gt;</span>&amp;lt;&#123;'Col xs=&#123;12&#125; md=&#123;8&#125;'&#125; /&amp;gt;<span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">Col</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">Col</span> <span class="attr">xs</span>=<span class="string">&#123;6&#125;</span> <span class="attr">md</span>=<span class="string">&#123;4&#125;</span>&gt;</span><span class="tag">&lt;<span class="name">code</span>&gt;</span>&amp;lt;&#123;'Col xs=&#123;6&#125; md=&#123;4&#125;'&#125; /&amp;gt;<span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">Col</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">Row</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">Row</span> <span class="attr">className</span>=<span class="string">"show-grid"</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">Col</span> <span class="attr">xs</span>=<span class="string">&#123;6&#125;</span> <span class="attr">md</span>=<span class="string">&#123;4&#125;</span>&gt;</span><span class="tag">&lt;<span class="name">code</span>&gt;</span>&amp;lt;&#123;'Col xs=&#123;6&#125; md=&#123;4&#125;'&#125; /&amp;gt;<span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">Col</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">Col</span> <span class="attr">xs</span>=<span class="string">&#123;6&#125;</span> <span class="attr">md</span>=<span class="string">&#123;4&#125;</span>&gt;</span><span class="tag">&lt;<span class="name">code</span>&gt;</span>&amp;lt;&#123;'Col xs=&#123;6&#125; md=&#123;4&#125;'&#125; /&amp;gt;<span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">Col</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">Col</span> <span class="attr">xsHidden</span> <span class="attr">md</span>=<span class="string">&#123;4&#125;</span>&gt;</span><span class="tag">&lt;<span class="name">code</span>&gt;</span>&amp;lt;&#123;'Col xsHidden md=&#123;4&#125;'&#125; /&amp;gt;<span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">Col</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">Row</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">Row</span> <span class="attr">className</span>=<span class="string">"show-grid"</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">Col</span> <span class="attr">xs</span>=<span class="string">&#123;6&#125;</span> <span class="attr">xsOffset</span>=<span class="string">&#123;6&#125;</span>&gt;</span><span class="tag">&lt;<span class="name">code</span>&gt;</span>&amp;lt;&#123;'Col xs=&#123;6&#125; xsOffset=&#123;6&#125;'&#125; /&amp;gt;<span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">Col</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">Row</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">Row</span> <span class="attr">className</span>=<span class="string">"show-grid"</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">Col</span> <span class="attr">md</span>=<span class="string">&#123;6&#125;</span> <span class="attr">mdPush</span>=<span class="string">&#123;6&#125;</span>&gt;</span><span class="tag">&lt;<span class="name">code</span>&gt;</span>&amp;lt;&#123;'Col md=&#123;6&#125; mdPush=&#123;6&#125;'&#125; /&amp;gt;<span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">Col</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">Col</span> <span class="attr">md</span>=<span class="string">&#123;6&#125;</span> <span class="attr">mdPull</span>=<span class="string">&#123;6&#125;</span>&gt;</span><span class="tag">&lt;<span class="name">code</span>&gt;</span>&amp;lt;&#123;'Col md=&#123;6&#125; mdPull=&#123;6&#125;'&#125; /&amp;gt;<span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">Col</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">Row</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></div><div class="line">    );</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Layout"><a href="#Layout" class="headerlink" title="Layout"></a>Layout</h3><p><img src="/img/2017-01-02-react-bootstrap-javascript-css-framework_2.jpg" width="640" height="182"></p>
<p>For example, above layout will be following codes:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// components/LayoutSample.jsx</span></div><div class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</div><div class="line"></div><div class="line"><span class="keyword">export</span> LayoutSample <span class="class"><span class="keyword">class</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</div><div class="line">  render () &#123;</div><div class="line">    <span class="keyword">return</span> (</div><div class="line">      <span class="xml"><span class="tag">&lt;<span class="name">Grid</span>&gt;</span></span></div><div class="line">        <span class="tag">&lt;<span class="name">Row</span> <span class="attr">className</span>=<span class="string">"show-grid"</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">Col</span> <span class="attr">xs</span>=<span class="string">&#123;12&#125;</span> <span class="attr">md</span>=<span class="string">&#123;8&#125;</span>&gt;</span><span class="tag">&lt;<span class="name">code</span>&gt;</span>&amp;lt;&#123;'Col xs=&#123;12&#125; md=&#123;8&#125;'&#125; /&amp;gt;<span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">Col</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">Col</span> <span class="attr">xs</span>=<span class="string">&#123;6&#125;</span> <span class="attr">md</span>=<span class="string">&#123;4&#125;</span>&gt;</span><span class="tag">&lt;<span class="name">code</span>&gt;</span>&amp;lt;&#123;'Col xs=&#123;6&#125; md=&#123;4&#125;'&#125; /&amp;gt;<span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">Col</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">Row</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">Row</span> <span class="attr">className</span>=<span class="string">"show-grid"</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">Col</span> <span class="attr">xs</span>=<span class="string">&#123;6&#125;</span> <span class="attr">md</span>=<span class="string">&#123;4&#125;</span>&gt;</span><span class="tag">&lt;<span class="name">code</span>&gt;</span>&amp;lt;&#123;'Col xs=&#123;6&#125; md=&#123;4&#125;'&#125; /&amp;gt;<span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">Col</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">Col</span> <span class="attr">xs</span>=<span class="string">&#123;6&#125;</span> <span class="attr">md</span>=<span class="string">&#123;4&#125;</span>&gt;</span><span class="tag">&lt;<span class="name">code</span>&gt;</span>&amp;lt;&#123;'Col xs=&#123;6&#125; md=&#123;4&#125;'&#125; /&amp;gt;<span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">Col</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">Col</span> <span class="attr">xsHidden</span> <span class="attr">md</span>=<span class="string">&#123;4&#125;</span>&gt;</span><span class="tag">&lt;<span class="name">code</span>&gt;</span>&amp;lt;&#123;'Col xsHidden md=&#123;4&#125;'&#125; /&amp;gt;<span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">Col</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">Row</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">Row</span> <span class="attr">className</span>=<span class="string">"show-grid"</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">Col</span> <span class="attr">xs</span>=<span class="string">&#123;6&#125;</span> <span class="attr">xsOffset</span>=<span class="string">&#123;6&#125;</span>&gt;</span><span class="tag">&lt;<span class="name">code</span>&gt;</span>&amp;lt;&#123;'Col xs=&#123;6&#125; xsOffset=&#123;6&#125;'&#125; /&amp;gt;<span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">Col</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">Row</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">Row</span> <span class="attr">className</span>=<span class="string">"show-grid"</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">Col</span> <span class="attr">md</span>=<span class="string">&#123;6&#125;</span> <span class="attr">mdPush</span>=<span class="string">&#123;6&#125;</span>&gt;</span><span class="tag">&lt;<span class="name">code</span>&gt;</span>&amp;lt;&#123;'Col md=&#123;6&#125; mdPush=&#123;6&#125;'&#125; /&amp;gt;<span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">Col</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">Col</span> <span class="attr">md</span>=<span class="string">&#123;6&#125;</span> <span class="attr">mdPull</span>=<span class="string">&#123;6&#125;</span>&gt;</span><span class="tag">&lt;<span class="name">code</span>&gt;</span>&amp;lt;&#123;'Col md=&#123;6&#125; mdPull=&#123;6&#125;'&#125; /&amp;gt;<span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">Col</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">Row</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></div><div class="line">    );</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Correspondence-between-Grid-Row-Col-and-Bootstrap-CSS"><a href="#Correspondence-between-Grid-Row-Col-and-Bootstrap-CSS" class="headerlink" title="Correspondence between Grid, Row Col and Bootstrap CSS"></a>Correspondence between Grid, Row Col and Bootstrap CSS</h2><ul>
<li><code>&lt;Col xs={12} md={4}&gt;</code> =&gt;    <code>&lt;div class=&quot;col-md-4 col-xs-12&quot;&gt;</code></li>
<li><code>&lt;Row&gt;</code> =&gt; <code>&lt;div class=&quot;row&quot;&gt;</code></li>
<li><code>&lt;Grid&gt;</code> =&gt;    <code>&lt;div class=&quot;container&quot;&gt;</code></li>
<li><code>&lt;Button&gt;</code> =&gt;    <code>&lt;button type=&quot;button&quot; class=&quot;btn&quot;&gt;</code></li>
</ul>
<p>Happy Hacking!</p>
<h2 id="Special-Thanks"><a href="#Special-Thanks" class="headerlink" title="Special Thanks"></a>Special Thanks</h2><ul>
<li><a href="https://react-bootstrap.github.io" target="_blank" rel="external">React-Bootstrap</a></li>
<li><a href="http://qiita.com/ynunokawa/items/7c60c0db0c000d265554" target="_blank" rel="external">http://qiita.com/ynunokaw…</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://react-bootstrap.github.io&quot;&gt;React-Bootstrap&lt;/a&gt;&lt;/strong&gt; is a library that can handle Bootstrap as a component of React.js.&lt;br&gt;By using this you can build code with a sense of combining React.js components, not Bootstrap’s CSS.&lt;br&gt;Also, as a whole your code becomes clearer, maintenance costs are suppressed as well!&lt;/p&gt;
    
    </summary>
    
      <category term="React.js" scheme="https://blog.morizyun.com/categories/React-js/"/>
    
    
      <category term="javascript" scheme="https://blog.morizyun.com/tags/javascript/"/>
    
      <category term="react" scheme="https://blog.morizyun.com/tags/react/"/>
    
      <category term="css" scheme="https://blog.morizyun.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>CSS-Modules with React.js</title>
    <link href="https://blog.morizyun.com/blog/react-js-css-module/"/>
    <id>https://blog.morizyun.com/blog/react-js-css-module/</id>
    <published>2016-12-31T15:00:00.000Z</published>
    <updated>2017-04-01T06:21:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>I would like to introduce <strong><a href="https://github.com/gajus/react-css-modules" target="_blank" rel="external">react-css-modules</a></strong> with React.js.<br>CSS-Module is a concept for seamless mapping of class names to CSS modules inside of React components.</p>
<a id="more"></a>
<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>Install following libraries:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ npm init -y</div><div class="line">$ npm install --save react react-dom</div><div class="line">$ npm install --save-dev webpack style-loader css-loader sass-loader node-sass extract-text-webpack-plugin</div><div class="line">$ npm install --save-dev resolve-url resolve-url-loader babel-plugin-transform-decorators-legacy</div></pre></td></tr></table></figure>
<h2 id="Setup-CSS-loader"><a href="#Setup-CSS-loader" class="headerlink" title="Setup CSS loader"></a>Setup CSS loader</h2><p>Add following codes to <code>.babelrc</code>:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">   <span class="string">"plugins"</span>: [<span class="string">"transform-decorators-legacy"</span>]  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Please add following codes in <code>webpack.config.js</code>:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">module</span>: &#123;</div><div class="line">  <span class="attr">loaders</span>: [</div><div class="line">    &#123;</div><div class="line">        <span class="attr">test</span>: <span class="regexp">/\.css$/</span>,</div><div class="line">        <span class="attr">loaders</span>: [</div><div class="line">            <span class="string">'style?sourceMap'</span>,</div><div class="line">            <span class="string">'css?modules&amp;importLoaders=1&amp;localIdentName=[path]___[name]__[local]___[hash:base64:5]'</span></div><div class="line">        ]</div><div class="line">    &#125;,</div><div class="line">    &#123;</div><div class="line">      <span class="attr">test</span>: <span class="regexp">/\.scss$/</span>,</div><div class="line">      <span class="attr">loaders</span>: [</div><div class="line">        <span class="string">'style'</span>,</div><div class="line">        <span class="string">'css?modules&amp;importLoaders=1&amp;localIdentName=[path]___[name]__[local]___[hash:base64:5]'</span>,</div><div class="line">        <span class="string">'resolve-url'</span>,</div><div class="line">        <span class="string">'sass'</span></div><div class="line">      ]</div><div class="line">    &#125;</div><div class="line">  ]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><p>In the context of React, CSS Modules look like this:</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* css/table-custom-styles.scss */</span></div><div class="line"><span class="selector-class">.table</span> &#123;</div><div class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.row</span> &#123;</div><div class="line">    <span class="attribute">composes</span>: row from <span class="string">'./table.css'</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.cell</span> &#123;</div><div class="line">    <span class="attribute">float</span>: left; <span class="attribute">width</span>: <span class="number">154px</span>; <span class="attribute">background</span>: <span class="number">#eee</span>; <span class="attribute">padding</span>: <span class="number">10px</span>; <span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span> <span class="number">10px</span> <span class="number">10px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>In ES6 syntax, we can support CSS like this:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// components/Table.jsx</span></div><div class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</div><div class="line"><span class="keyword">import</span> styles <span class="keyword">from</span> <span class="string">'../css/table.css'</span>;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">Table</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</div><div class="line">    render () &#123;</div><div class="line">        <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#123;styles.table&#125;</span>&gt;</span></span></div><div class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#123;styles.row&#125;</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#123;styles.cell&#125;</span>&gt;</span>A0<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#123;styles.cell&#125;</span>&gt;</span>B0<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>ES7 decorators syntax is as follows:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// components/Table.jsx</span></div><div class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</div><div class="line"><span class="keyword">import</span> CSSModules <span class="keyword">from</span> <span class="string">'react-css-modules'</span>;</div><div class="line"><span class="keyword">import</span> styles <span class="keyword">from</span> <span class="string">'./table.css'</span>;</div><div class="line"></div><div class="line">@CSSModules(styles)</div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</div><div class="line">    render () &#123;</div><div class="line">        <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">styleName</span>=<span class="string">'table'</span>&gt;</span></span></div><div class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">styleName</span>=<span class="string">'row'</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">styleName</span>=<span class="string">'cell'</span>&gt;</span>A0<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">styleName</span>=<span class="string">'cell'</span>&gt;</span>B0<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Happy Hacking!</p>
<h2 id="Special-Thanks"><a href="#Special-Thanks" class="headerlink" title="Special Thanks"></a>Special Thanks</h2><ul>
<li><a href="http://qiita.com/_likr/items/c335dec5221024ad56bc" target="_blank" rel="external">http://qiita.com/_likr/i…</a></li>
<li>Modular CSS with React – Medium<ul>
<li><a href="https://medium.com/@pioul/modular-css-with-react-61638ae9ea3e#.698bxp1vu" target="_blank" rel="external">English</a></li>
<li><a href="http://postd.cc/modular-css-with-react/" target="_blank" rel="external">Japanese</a></li>
</ul>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;I would like to introduce &lt;strong&gt;&lt;a href=&quot;https://github.com/gajus/react-css-modules&quot;&gt;react-css-modules&lt;/a&gt;&lt;/strong&gt; with React.js.&lt;br&gt;CSS-Module is a concept for seamless mapping of class names to CSS modules inside of React components.&lt;/p&gt;
    
    </summary>
    
      <category term="React.js" scheme="https://blog.morizyun.com/categories/React-js/"/>
    
    
      <category term="javascript" scheme="https://blog.morizyun.com/tags/javascript/"/>
    
      <category term="css" scheme="https://blog.morizyun.com/tags/css/"/>
    
      <category term="React.js" scheme="https://blog.morizyun.com/tags/React-js/"/>
    
  </entry>
  
  <entry>
    <title>First Step for React.js on Rails</title>
    <link href="https://blog.morizyun.com/blog/react-js-on-rails-installation/"/>
    <id>https://blog.morizyun.com/blog/react-js-on-rails-installation/</id>
    <published>2016-12-29T15:00:00.000Z</published>
    <updated>2017-04-01T06:21:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>This article describes how to start React on Rails.</p>
<a id="more"></a>
<h2 id="Instration-Node-with-Mac-Homebrew"><a href="#Instration-Node-with-Mac-Homebrew" class="headerlink" title="Instration Node with Mac Homebrew"></a>Instration Node with Mac Homebrew</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">brew upgrade</div><div class="line">brew install node</div></pre></td></tr></table></figure>
<h2 id="Creating-React-Sample-App"><a href="#Creating-React-Sample-App" class="headerlink" title="Creating React Sample App"></a>Creating React Sample App</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">npm install -g create-react-app</div><div class="line">create-react-app hello-world</div><div class="line"><span class="built_in">cd</span> hello-world</div><div class="line">npm start</div></pre></td></tr></table></figure>
<h2 id="Using-React-on-Rails"><a href="#Using-React-on-Rails" class="headerlink" title="Using React on Rails"></a>Using React on Rails</h2><p>In this section, we are using RubyGem <strong><a href="https://github.com/shakacode/react_on_rails" target="_blank" rel="external">react_on_rails</a></strong>.</p>
<p>At first, add the following to your Gemfile and <code>bundle install</code>:</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gem <span class="string">'react_on_rails'</span></div></pre></td></tr></table></figure>
<p>Commit this to git and please run following commands:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Run the generator with a sample "Hello World" App with React.js</span></div><div class="line">rails g react_on_rails:install</div><div class="line"></div><div class="line"><span class="comment"># Bundle &amp;&amp; NPM install:</span></div><div class="line">bundle &amp;&amp; npm install</div><div class="line"></div><div class="line"><span class="comment"># Start your Rails server:</span></div><div class="line">foreman start <span class="_">-f</span> Procfile.dev</div></pre></td></tr></table></figure>
<p>Please see <a href="http://localhost:3000/hello_world" target="_blank" rel="external">http://localhost:3000/hello_world</a>.</p>
<p>All JavaScript in React On Rails is loaded from npm: react-on-rails.<br>To manually install this, please execute following command like this:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> client &amp;&amp; npm i --saveDev react react-on-rails react-helmet nprogress</div></pre></td></tr></table></figure>
<h2 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h2><p>Supporting following flow:</p>
<ol>
<li>Return HTML in first request</li>
<li>In page transition, return JSON</li>
<li>Do not show JSON when returning with browser back</li>
</ol>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">ApplicationController</span> &lt; ActionController::Base</span></div><div class="line">  protect_from_forgery <span class="symbol">with:</span> <span class="symbol">:exception</span></div><div class="line"></div><div class="line">  private</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">def</span> <span class="title">_action_path</span></span></div><div class="line">    <span class="string">"<span class="subst">#&#123;controller_path&#125;</span>#<span class="subst">#&#123;action_name&#125;</span>"</span></div><div class="line">  <span class="keyword">end</span></div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">def</span> <span class="title">_common_props</span></span></div><div class="line">    &#123; <span class="symbol">actionPath:</span> _action_path &#125;</div><div class="line">  <span class="keyword">end</span></div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">def</span> <span class="title">_render_for_react</span><span class="params">(<span class="symbol">props:</span> &#123;&#125;, <span class="symbol">status:</span> <span class="number">200</span>)</span></span></div><div class="line">    <span class="keyword">if</span> request.format.json?</div><div class="line">      response.headers[<span class="string">'Cache-Control'</span>] = <span class="string">'no-cache, no-store'</span></div><div class="line">      response.headers[<span class="string">'Expires'</span>] = <span class="string">'Fri, 01 Jan 1990 00:00:00 GMT'</span></div><div class="line">      response.headers[<span class="string">'Pragma'</span>] = <span class="string">'no-cache'</span></div><div class="line">      render(</div><div class="line">        <span class="symbol">json:</span> &#123;</div><div class="line">          <span class="symbol">rootProps:</span> _common_props.merge(props)</div><div class="line">        &#125;,</div><div class="line">        <span class="symbol">status:</span> status</div><div class="line">      )</div><div class="line">    <span class="keyword">else</span></div><div class="line">      render(</div><div class="line">        <span class="symbol">html:</span> view_context.react_component(</div><div class="line">          <span class="string">'Router'</span>,</div><div class="line">          <span class="symbol">props:</span> &#123;</div><div class="line">            <span class="symbol">rootProps:</span> _common_props.merge(props)</div><div class="line">          &#125;.as_json</div><div class="line">        ),</div><div class="line">        <span class="symbol">layout:</span> <span class="literal">true</span>,</div><div class="line">        <span class="symbol">status:</span> status</div><div class="line">      )</div><div class="line">    <span class="keyword">end</span></div><div class="line">  <span class="keyword">end</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
<p>Usage example is as follows:</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">ArticlesController</span> &lt; ApplicationController</span></div><div class="line">  <span class="comment"># GET /</span></div><div class="line">  <span class="function"><span class="keyword">def</span> <span class="title">index</span></span></div><div class="line">    _render_for_react(</div><div class="line">      <span class="symbol">props:</span> &#123;</div><div class="line">        <span class="symbol">articles:</span> Article.limit(<span class="number">20</span>)</div><div class="line">      &#125;</div><div class="line">    )</div><div class="line">  <span class="keyword">end</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
<h2 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h2><h3 id="Entry-Point"><a href="#Entry-Point" class="headerlink" title="Entry Point"></a>Entry Point</h3><p>Entry point of shared JavaScript code is like this:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// client/entry_points/main.js</span></div><div class="line"><span class="keyword">import</span> ReactOnRails <span class="keyword">from</span> <span class="string">"react-on-rails"</span>;</div><div class="line"><span class="keyword">import</span> Router <span class="keyword">from</span> <span class="string">"../components/Router"</span>;</div><div class="line"></div><div class="line">ReactOnRails.register(&#123; Router &#125;);</div></pre></td></tr></table></figure>
<h3 id="Router"><a href="#Router" class="headerlink" title="Router"></a>Router</h3><ol>
<li>Router selects Component by <code>actionPath</code></li>
<li>Display progress bar during page transition</li>
<li>Scroll to a top of a page after page transition</li>
<li>Adjust browser history using pushState / popState</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">"react"</span>;</div><div class="line"><span class="keyword">import</span> NProgress <span class="keyword">from</span> <span class="string">"nprogress"</span>;</div><div class="line"></div><div class="line"><span class="keyword">import</span> Articles <span class="keyword">from</span> <span class="string">"../components/Articles"</span></div><div class="line"><span class="comment">//...</span></div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">Router</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</div><div class="line">  <span class="keyword">static</span> propTypes = &#123;</div><div class="line">    <span class="attr">rootProps</span>:  React.PropTypes.object,</div><div class="line">  &#125;;</div><div class="line"></div><div class="line">  <span class="keyword">static</span> childContextTypes = &#123;</div><div class="line">    <span class="attr">onLinkClick</span>: React.PropTypes.func,</div><div class="line">  &#125;;</div><div class="line"></div><div class="line">  componentDidMount() &#123;</div><div class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">"popstate"</span>, () =&gt; &#123;</div><div class="line">      <span class="keyword">this</span>.transitTo(<span class="built_in">document</span>.location.href, &#123; <span class="attr">pushState</span>: <span class="literal">false</span> &#125;);</div><div class="line">    &#125;);</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="keyword">constructor</span>(...args) &#123;</div><div class="line">    <span class="keyword">super</span>(...args);</div><div class="line">    <span class="keyword">this</span>.state = &#123;</div><div class="line">      <span class="attr">rootProps</span>:    <span class="keyword">this</span>.props.rootProps,</div><div class="line">    &#125;;</div><div class="line">  &#125;;</div><div class="line"></div><div class="line">  getComponent() &#123;</div><div class="line">    <span class="keyword">switch</span> (<span class="keyword">this</span>.state.rootProps.actionPath) &#123;</div><div class="line">      <span class="keyword">case</span> <span class="string">"articles#index"</span>:</div><div class="line">        <span class="keyword">return</span> Articles;</div><div class="line">      <span class="comment">//...</span></div><div class="line">    &#125;</div><div class="line">  &#125;;</div><div class="line"></div><div class="line">  getChildContext() &#123;</div><div class="line">    <span class="keyword">return</span> &#123;</div><div class="line">      <span class="attr">onLinkClick</span>: <span class="keyword">this</span>.onLinkClick.bind(<span class="keyword">this</span>),</div><div class="line">    &#125;;</div><div class="line">  &#125;;</div><div class="line"></div><div class="line">  onLinkClick(event) &#123;</div><div class="line">    <span class="keyword">if</span> (!event.metaKey) &#123;</div><div class="line">      event.preventDefault();</div><div class="line">      <span class="keyword">const</span> anchorElement = event.currentTarget.pathname ? event.currentTarget : event.currentTarget.querySelector(<span class="string">"a"</span>);</div><div class="line">      <span class="keyword">this</span>.transitTo(anchorElement.href, &#123; <span class="attr">pushState</span>: <span class="literal">true</span> &#125;);</div><div class="line">    &#125;</div><div class="line">  &#125;;</div><div class="line"></div><div class="line">  transitTo(url, &#123; pushState &#125;) &#123;</div><div class="line">    NProgress.start();</div><div class="line">    $.ajax(&#123;</div><div class="line">      <span class="attr">url</span>: url,</div><div class="line">      <span class="attr">dataType</span>: <span class="string">'json'</span>,</div><div class="line">      <span class="attr">cache</span>: <span class="literal">false</span>,</div><div class="line">      <span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params">props</span>) </span>&#123;</div><div class="line">        <span class="keyword">if</span> (pushState) &#123;</div><div class="line">          history.pushState(&#123;&#125;, <span class="string">""</span>, url);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">this</span>.setState(&#123;<span class="attr">rootProps</span>: props.rootProps&#125;);</div><div class="line">        NProgress.done();</div><div class="line">        <span class="keyword">if</span>(<span class="keyword">typeof</span> <span class="built_in">window</span> !== <span class="string">'undefined'</span>) &#123;</div><div class="line">          <span class="built_in">window</span>.scrollTo(<span class="number">0</span>, <span class="number">0</span>);</div><div class="line">        &#125;</div><div class="line">      &#125;.bind(<span class="keyword">this</span>),</div><div class="line">      <span class="attr">error</span>: <span class="function"><span class="keyword">function</span>(<span class="params">xhr, status, err</span>) </span>&#123;</div><div class="line">        NProgress.done();</div><div class="line">        <span class="built_in">console</span>.error(url, status, err.toString());</div><div class="line">      &#125;.bind(<span class="keyword">this</span>)</div><div class="line">    &#125;);</div><div class="line">  &#125;;</div><div class="line"></div><div class="line">  render() &#123;</div><div class="line">    <span class="keyword">const</span> Component = <span class="keyword">this</span>.getComponent();</div><div class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">Component</span> &#123;<span class="attr">...this.state.rootProps</span>&#125; <span class="attr">key</span>=<span class="string">&#123;this.state.requestId&#125;</span> /&gt;</span>;</span></div><div class="line">  &#125;;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Link"><a href="#Link" class="headerlink" title="Link"></a>Link</h3><p>When a user clicks a link, a client communicates with the server with XHR and post a state to Router. </p>
<p>So I use the original Link tag instead of a tag.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">"react"</span>;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">Link</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</div><div class="line">  <span class="keyword">static</span> contextTypes = &#123;</div><div class="line">    <span class="attr">onLinkClick</span>: React.PropTypes.func,</div><div class="line">  &#125;;</div><div class="line"></div><div class="line">  onClick(event) &#123;</div><div class="line">    <span class="keyword">this</span>.context.onLinkClick(event);</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  render() &#123;</div><div class="line">    <span class="keyword">return</span>(</div><div class="line">      <span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">onClick</span>=<span class="string">&#123;this.onClick.bind(this)&#125;</span> &#123;<span class="attr">...this.props</span>&#125;&gt;</span></span></div><div class="line">        &#123;this.props.children&#125;</div><div class="line">      <span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    );</div><div class="line">  &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p><code>Link</code> example is as follows:</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">Link</span> <span class="attr">href</span>=<span class="string">"/"</span>&gt;</span>txt<span class="tag">&lt;/<span class="name">Link</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="Title-Meta-Tags"><a href="#Title-Meta-Tags" class="headerlink" title="Title/Meta Tags"></a>Title/Meta Tags</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">"react"</span>;</div><div class="line"><span class="keyword">import</span> Helmet <span class="keyword">from</span> <span class="string">"react-helmet"</span>;</div><div class="line"></div><div class="line"><span class="keyword">import</span> &#123;siteName, siteBaseUrl&#125; <span class="keyword">from</span> <span class="string">"../constants/service"</span>;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">Articles</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</div><div class="line">  pageUrl() &#123;</div><div class="line">    <span class="keyword">return</span> siteBaseUrl + <span class="string">"/articles"</span>;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  pageTitle() &#123;</div><div class="line">    <span class="keyword">return</span> <span class="string">"huga"</span>;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  pageDescription() &#123;</div><div class="line">    <span class="keyword">return</span> <span class="string">"hoge"</span>;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  render() &#123;</div><div class="line">    <span class="keyword">return</span>(</div><div class="line">      <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></div><div class="line">        <span class="tag">&lt;<span class="name">Helmet</span></span></div><div class="line">          <span class="attr">title</span>=<span class="string">&#123;this.pageTitle()&#125;</span></div><div class="line">          <span class="attr">link</span>=<span class="string">&#123;[</span></div><div class="line">            &#123;<span class="attr">rel:</span> "<span class="attr">canonical</span>", <span class="attr">href:</span> <span class="attr">this.pageUrl</span>()&#125;,</div><div class="line">            &#123;<span class="attr">rel:</span> '<span class="attr">alternate</span>', <span class="attr">href:</span> <span class="attr">this.pageUrl</span>()&#125;,</div><div class="line">          ]&#125;</div><div class="line">          <span class="attr">meta</span>=<span class="string">&#123;[</span></div><div class="line">            &#123;<span class="attr">property:</span> "<span class="attr">og:url</span>",          <span class="attr">content:</span> <span class="attr">this.pageUrl</span>()&#125;,</div><div class="line">            &#123;<span class="attr">property:</span> "<span class="attr">og:title</span>",        <span class="attr">content:</span> <span class="attr">this.pageTitle</span>()&#125;,</div><div class="line">            &#123;<span class="attr">property:</span> "<span class="attr">og:description</span>",  <span class="attr">content:</span> <span class="attr">this.pageDescription</span>()&#125;,</div><div class="line">            &#123;<span class="attr">name:</span> "<span class="attr">description</span>",         <span class="attr">content:</span> <span class="attr">this.pageDescription</span>()&#125;,</div><div class="line">          ]&#125;</div><div class="line">        /&gt;</div><div class="line">        //...</div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  );</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Run-npm-install-in-ElasticBeansTalk"><a href="#Run-npm-install-in-ElasticBeansTalk" class="headerlink" title="Run npm install in ElasticBeansTalk"></a>Run npm install in ElasticBeansTalk</h2><p>This is a script to use <code>webpack</code> in deploy process of ElasticBeansTalk.<br>To use webpack you need to run <code>npm install</code> before<code>rake assets: precompile</code>.<br>(<code>10</code> is depend on each environment, so please fix it.)</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="attr">files:</span></div><div class="line">  <span class="string">"/opt/elasticbeanstalk/hooks/appdeploy/pre/10_install_node_modules.sh"</span> <span class="string">:</span></div><div class="line"><span class="attr">    mode:</span> <span class="string">"000744"</span></div><div class="line"><span class="attr">    owner:</span> <span class="string">root</span></div><div class="line"><span class="attr">    group:</span> <span class="string">root</span></div><div class="line"><span class="attr">    content:</span> <span class="string">|</span></div><div class="line">      #!/usr/bin/env bash</div><div class="line">      set -xe</div><div class="line">      EB_APP_STAGING_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k app_staging_dir)</div><div class="line">      cd $EB_APP_STAGING_DIR/client</div><div class="line">      npm install</div><div class="line"><span class="attr">    encoding:</span> <span class="string">plain</span></div></pre></td></tr></table></figure>
<h2 id="Special-Thanks"><a href="#Special-Thanks" class="headerlink" title="Special Thanks"></a>Special Thanks</h2><p>This article has created by the following Japanese articles. Thank you very much, <a href="https://twitter.com/r7kamura" target="_blank" rel="external">@r7kamura</a>!</p>
<ul>
<li><a href="http://r7kamura.hatenablog.com/entry/2016/10/10/173610" target="_blank" rel="external">http://r7kamura.hatenablog.com/entry/2016/10/10/173610</a></li>
<li><a href="http://r7kamura.hatenablog.com/entry/2016/12/13/074119" target="_blank" rel="external">http://r7kamura.hatenablog.com/entry/2016/12/13/074119</a></li>
<li><p><a href="http://r7kamura.hatenablog.com/entry/2016/10/03/001212" target="_blank" rel="external">http://r7kamura.hatenablog.com/entry/2016/10/03/001212</a></p>
</li>
<li><p><a href="https://facebook.github.io/react/docs/hello-world.html" target="_blank" rel="external">https://facebook.github.io/react/docs/hello-world.html</a></p>
</li>
<li><a href="https://facebook.github.io/react/tutorial/tutorial.html" target="_blank" rel="external">https://facebook.github.io/react/tutorial/tutorial.html</a></li>
<li><a href="http://qiita.com/_muraham/items/22dec19e5d069560b40f" target="_blank" rel="external">http://qiita.com/_muraham/item…</a></li>
</ul>
<h2 id="Sample-App"><a href="#Sample-App" class="headerlink" title="Sample App"></a>Sample App</h2><ul>
<li><a href="https://github.com/suzan2go/react-rails-redux-sample" target="_blank" rel="external">suzan2go/react-rails-redux-sample: Example of rails application with redux and react-rails</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This article describes how to start React on Rails.&lt;/p&gt;
    
    </summary>
    
      <category term="React.js" scheme="https://blog.morizyun.com/categories/React-js/"/>
    
    
  </entry>
  
  <entry>
    <title>React.js Tips &amp; Useful Component Set for beginner</title>
    <link href="https://blog.morizyun.com/blog/react-js-tips-useful-component/"/>
    <id>https://blog.morizyun.com/blog/react-js-tips-useful-component/</id>
    <published>2016-12-28T15:00:00.000Z</published>
    <updated>2017-04-01T06:22:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>This article describes React.js tips &amp; useful componet for beginner.</p>
<a id="more"></a>
<h2 id="Useful-Component-Set-Material-UI"><a href="#Useful-Component-Set-Material-UI" class="headerlink" title="Useful Component Set: Material UI"></a>Useful Component Set: Material UI</h2><p><a href="https://github.com/callemall/material-ui" target="_blank"><br>  <img src="/img/2016-12-29-react-js-tips-useful-component_1.jpg" width="500" height="297"><br></a></p>
<ul>
<li><a href="https://github.com/callemall/material-ui" target="_blank" rel="external">https://github.com/callemall/material-ui</a></li>
</ul>
<p>It is a React Component sets supprting Google Material Design Guideline.</p>
<ul>
<li>There are a lot of components patttern &amp; it is high quality.</li>
<li>Server Side Rendering is being considered.</li>
<li>Some themes and color palettes are prepared.</li>
</ul>
<h2 id="Allow-function"><a href="#Allow-function" class="headerlink" title="Allow function"></a>Allow function</h2><p>The body of ES6 arrow functions share the same lexical <code>this</code> as the code that surrounds them.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// before</span></div><div class="line"><span class="keyword">var</span> getUserStoreStates = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  <span class="keyword">return</span> UserStore.getAjaxResult();</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">// after</span></div><div class="line"><span class="keyword">const</span> getUserStoreStates = <span class="function"><span class="params">()</span> =&gt;</span> UserStore.getAjaxResult();</div><div class="line"></div><div class="line"><span class="keyword">const</span> ajax = &#123;</div><div class="line">  <span class="attr">get</span>  : <span class="function">(<span class="params">url, params, callback</span>) =&gt;</span> &#123;</div><div class="line">    request</div><div class="line">      .get(url)</div><div class="line">      .query(params)</div><div class="line">      .end(<span class="function">(<span class="params">err, res</span>) =&gt;</span> callback(err, res))</div><div class="line">  &#125;,</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Stateless-Functions"><a href="#Stateless-Functions" class="headerlink" title="Stateless Functions"></a>Stateless Functions</h2><p>Most of your components would be stateless functions:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span></div><div class="line"></div><div class="line"><span class="keyword">const</span> App = <span class="function">(<span class="params">&#123;greet, name&#125;</span>) =&gt;</span> (</div><div class="line">  <span class="keyword">return</span> (<span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">"commentBox"</span>&gt;</span></span></div><div class="line">    &#123;greet&#125;! I am a &#123;name&#125;.</div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span>);</div><div class="line">);</div><div class="line"></div><div class="line">App.propTypes = &#123;</div><div class="line">  <span class="attr">greet</span>: React.PropTypes.string.isRequired,</div><div class="line">  <span class="attr">name</span>: React.PropTypes.string.isRequired</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="refs"><a href="#refs" class="headerlink" title="refs"></a>refs</h2><p>A component can have a attribute to identify the component named <code>ref</code>.<br>All ref in the same componet are grouped into <code>refs</code>.</p>
<p>If you write the following code:</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">ref</span>=<span class="string">"name"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">ref</span>=<span class="string">"mail"</span>/&gt;</span></div></pre></td></tr></table></figure>
<p>You can access the element by <code>this.refs.name</code> or <code>this.refs.mail</code>.</p>
<ul>
<li><a href="http://qiita.com/kuniken/items/a22adda392ccc30011b1" target="_blank" rel="external">http://qiita.com/kuniken/…</a></li>
</ul>
<h2 id="Context-Usage"><a href="#Context-Usage" class="headerlink" title="Context Usage"></a>Context Usage</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// components/Parent.jsx</span></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">Parent</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</div><div class="line">  <span class="keyword">static</span> childContextTypes = &#123;</div><div class="line">    <span class="attr">onLick</span>: React.PropTypes.func,</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  getChildContext() &#123;</div><div class="line">    <span class="keyword">return</span> &#123;</div><div class="line">      <span class="attr">onLick</span>: <span class="keyword">this</span>.onLick.bind(<span class="keyword">this</span>),</div><div class="line">    &#125;;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  onLick(event) &#123;</div><div class="line">    <span class="comment">// do something...</span></div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// components/Child.jsx</span></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">Child</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</div><div class="line">  <span class="keyword">static</span> contextTypes = &#123;</div><div class="line">    <span class="attr">onClick</span>: React.PropTypes.func.isRequired,</div><div class="line">  &#125;;</div><div class="line"></div><div class="line">  onClick = <span class="function">(<span class="params">event</span>) =&gt;</span> &#123;</div><div class="line">    <span class="keyword">this</span>.context.onClick(event);</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  render() &#123;</div><div class="line">    <span class="keyword">return</span>(</div><div class="line">      <span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">onClick</span>=<span class="string">&#123;this.onClick.bind(this)&#125;</span> &#123;<span class="attr">...this.props</span>&#125;&gt;</span></span></div><div class="line">        sample text</div><div class="line">      <span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    );</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Render-raw-html"><a href="#Render-raw-html" class="headerlink" title="Render raw html"></a>Render raw html</h2><p>It is possible to draw in raw HTML by using <code>dangerouslySetInnerHTML</code>.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;div className=<span class="string">"text"</span> dangerouslySetInnerHTML=&#123;&#123;<span class="attr">__html</span>: <span class="keyword">this</span>.props.message&#125;&#125;&gt;</div></pre></td></tr></table></figure>
<ul>
<li><a href="http://mikazuki.hatenablog.jp/entry/2016/01/07/055556" target="_blank" rel="external">http://mikazuki.hatenablog.jp/entry/2016/01/07/055556</a></li>
</ul>
<h2 id="Using-React-addons"><a href="#Using-React-addons" class="headerlink" title="Using React addons"></a>Using React addons</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> children = React.addons.createFragment(&#123;</div><div class="line">  <span class="attr">right</span>: props.rightChildren,</div><div class="line">  <span class="attr">left</span>: props.leftChildren</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<ul>
<li><a href="https://facebook.github.io/react/docs/addons.html" target="_blank" rel="external">https://facebook.github.io/react/docs/addons.html</a></li>
<li><a href="https://facebook.github.io/react/docs/create-fragment.html" target="_blank" rel="external">https://facebook.github.io/react/docs/create-fragment.html</a></li>
</ul>
<h2 id="JS-Tips-Currency-Formatting"><a href="#JS-Tips-Currency-Formatting" class="headerlink" title="JS Tips: Currency Formatting"></a>JS Tips: Currency Formatting</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[<span class="built_in">Number</span>].toString().replace(<span class="regexp">/(\d)(?=(\d&#123;3&#125;)+$)/g</span> , <span class="string">'$1,'</span>);</div></pre></td></tr></table></figure>
<ul>
<li><a href="http://stackoverflow.com/questions/14467433/currency-formatting-in-javascript" target="_blank" rel="external">http://stackoverflow.com/questions/14467433/currency-formatting-in-javascript</a></li>
</ul>
<h2 id="Not-use-target-’-blank’"><a href="#Not-use-target-’-blank’" class="headerlink" title="Not use target=’_blank’"></a>Not use target=’_blank’</h2><p>In React.js, we should not use <code>target=&#39;_blank&#39;</code> in link tag.<br>We should add <code>rel=&quot;noreferrer noopener&quot;</code></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">"react"</span>;</div><div class="line"><span class="keyword">import</span> ReactDOM <span class="keyword">from</span> <span class="string">"react-dom"</span>;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Index</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</div><div class="line">  render() &#123;</div><div class="line">    <span class="keyword">return</span> (</div><div class="line">      <span class="xml"><span class="tag">&lt;<span class="name">a</span></span></span></div><div class="line">        <span class="attr">href</span>=<span class="string">"http://example.com"</span></div><div class="line">        <span class="attr">target</span>=<span class="string">"_blank"</span></div><div class="line">        <span class="attr">rel</span>=<span class="string">"noreferrer noopener"</span></div><div class="line">      &gt;</div><div class="line">        Anchor Text</div><div class="line">      <span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    );</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">ReactDOM.render(</div><div class="line">  <span class="xml"><span class="tag">&lt;<span class="name">Index</span> /&gt;</span>,</span></div><div class="line">  document.getElementById("root")</div><div class="line">);</div></pre></td></tr></table></figure>
<h2 id="Trouble-shooting"><a href="#Trouble-shooting" class="headerlink" title="Trouble shooting"></a>Trouble shooting</h2><p>Error is as follows:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Uncaught Invariant Violation: Objects are not valid as a React child (found: object with keys &#123;...&#125;). If you meant to render a collection of children, use an array instead or wrap the object using createFragment(object) from the React add-ons.</div></pre></td></tr></table></figure>
<p>Solution:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> newArray = <span class="keyword">this</span>.state.oldArray.map(<span class="function"><span class="keyword">function</span>(<span class="params">obj</span>)</span>&#123;</div><div class="line">    <span class="keyword">return</span> &#123; <span class="attr">id</span>: obj.id, <span class="attr">url</span>: obj.url, &#125;</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="keyword">return</span> newArray[<span class="number">0</span>].url + newArray[<span class="number">0</span>].id</div></pre></td></tr></table></figure>
<h2 id="Special-Thanks"><a href="#Special-Thanks" class="headerlink" title="Special Thanks"></a>Special Thanks</h2><ul>
<li><a href="https://babeljs.io/blog/2015/06/07/react-on-es6-plus" target="_blank" rel="external">React on ES6+ · Babel</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This article describes React.js tips &amp;amp; useful componet for beginner.&lt;/p&gt;
    
    </summary>
    
      <category term="React.js" scheme="https://blog.morizyun.com/categories/React-js/"/>
    
    
  </entry>
  
  <entry>
    <title>React.js on ES6+ Tips for beginner</title>
    <link href="https://blog.morizyun.com/blog/es6-plus-react-js-beginner-tips/"/>
    <id>https://blog.morizyun.com/blog/es6-plus-react-js-beginner-tips/</id>
    <published>2016-12-27T15:00:00.000Z</published>
    <updated>2017-04-01T06:22:12.000Z</updated>
    
    <content type="html"><![CDATA[<p>This article describes React.js on ES6+ tips for beginner.</p>
<a id="more"></a>
<h2 id="React-Component"><a href="#React-Component" class="headerlink" title="React.Component"></a>React.Component</h2><h3 id="Constructor"><a href="#Constructor" class="headerlink" title="Constructor"></a>Constructor</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// If using only props</span></div><div class="line"><span class="keyword">constructor</span>(props) &#123;</div><div class="line">  <span class="keyword">super</span>(props);</div><div class="line">  <span class="comment">//anything to do</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// If using props &amp; context</span></div><div class="line"><span class="keyword">constructor</span>(props, context) &#123;</div><div class="line">  <span class="keyword">super</span>(props, context);</div><div class="line">  <span class="comment">//anything to do</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="State-Initialization"><a href="#State-Initialization" class="headerlink" title="State Initialization"></a>State Initialization</h3><p>We should assign a object directly to <code>this.state</code> for initialization.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">constructor</span>(props) &#123;</div><div class="line">  <span class="keyword">super</span>(props);</div><div class="line">  <span class="keyword">this</span>.state = &#123;<span class="attr">message</span>: <span class="string">''</span>&#125;;</div><div class="line">&#125;</div><div class="line"></div><div class="line">componentDidMount() &#123;</div><div class="line">  <span class="keyword">this</span>.setState(&#123;<span class="attr">message</span>: <span class="string">'fuga'</span>&#125;);</div><div class="line">&#125;</div><div class="line"></div><div class="line">render()&#123;</div><div class="line">  <span class="keyword">return</span> (</div><div class="line">    <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Sample title: &#123;this.state.message&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></div><div class="line">  );</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Binding-this-for-custom-method"><a href="#Binding-this-for-custom-method" class="headerlink" title="Binding this for custom method"></a>Binding this for custom method</h3><p>If you impliment a method that handles state, props or refs, you should bind <code>this</code> to the method.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">constructor</span>(props) &#123;</div><div class="line">  <span class="keyword">super</span>(props);</div><div class="line">  <span class="keyword">this</span>.handleSubmit = <span class="keyword">this</span>.handleSubmit.bind(<span class="keyword">this</span>); <span class="comment">// &lt;= binding</span></div><div class="line">  <span class="keyword">this</span>.state = &#123;<span class="attr">message</span>: <span class="string">''</span>&#125;; </div><div class="line">&#125;</div><div class="line"></div><div class="line">handleSubmit()&#123;</div><div class="line">  <span class="keyword">var</span> name = ReactDOM.findDOMNode(<span class="keyword">this</span>.refs.name).value.trim();</div><div class="line">  <span class="keyword">var</span> email = ReactDOM.findDOMNode(<span class="keyword">this</span>.refs.email).value.trim();</div><div class="line">  <span class="comment">// do something</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">componentDidMount() &#123;</div><div class="line">  <span class="keyword">this</span>.setState(&#123;<span class="attr">message</span>: <span class="string">'hoge'</span>&#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="props-Initialization-propType-Definition"><a href="#props-Initialization-propType-Definition" class="headerlink" title="props Initialization, propType Definition"></a>props Initialization, propType Definition</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Video</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</div><div class="line">  <span class="keyword">static</span> defaultProps = &#123;</div><div class="line">    <span class="attr">autoPlay</span>: <span class="literal">false</span>,</div><div class="line">    <span class="attr">maxLoops</span>: <span class="number">10</span>,</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">static</span> propTypes = &#123;</div><div class="line">    <span class="attr">autoPlay</span>: React.PropTypes.bool.isRequired,</div><div class="line">    <span class="attr">maxLoops</span>: React.PropTypes.number.isRequired,</div><div class="line">    <span class="attr">posterFrameSrc</span>: React.PropTypes.string.isRequired,</div><div class="line">    <span class="attr">videoSrc</span>: React.PropTypes.string.isRequired,</div><div class="line">  &#125;</div><div class="line">  state = &#123;</div><div class="line">    <span class="attr">loopsRemaining</span>: <span class="keyword">this</span>.props.maxLoops,</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="contextType-Definition"><a href="#contextType-Definition" class="headerlink" title="contextType Definition"></a>contextType Definition</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Header</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span></span>&#123;</div><div class="line">  <span class="keyword">static</span> contextTypes = &#123;</div><div class="line">    <span class="attr">router</span>: React.PropTypes.object.isRequired</div><div class="line">  &#125;</div><div class="line">  </div><div class="line">  render()&#123;</div><div class="line">    <span class="keyword">return</span> (</div><div class="line">      <span class="xml"><span class="tag">&lt;<span class="name">header</span>&gt;</span></span></div><div class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Sample title: &#123;this.state.message&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">header</span>&gt;</span></div><div class="line">    );</div><div class="line">  &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<ul>
<li><a href="http://qiita.com/kuniken/items/2e850daa26a10b5098d6" target="_blank" rel="external">http://qiita.com/kuniken/items…</a></li>
</ul>
<h2 id="Module-System"><a href="#Module-System" class="headerlink" title="Module System"></a>Module System</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// components/ParentComponent.jsx</span></div><div class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</div><div class="line"><span class="keyword">import</span> Component1 <span class="keyword">from</span> <span class="string">'./Component1'</span>;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">ParentComponent</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</div><div class="line">  render() &#123;</div><div class="line">    <span class="keyword">return</span> (</div><div class="line">      <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></div><div class="line">        <span class="tag">&lt;<span class="name">Component1</span> /&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    );</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">ReactDom.render(</div><div class="line">  <span class="xml"><span class="tag">&lt;<span class="name">ParentComponent</span> /&gt;</span>,</span></div><div class="line">  document.getElementById('components')</div><div class="line">);</div><div class="line"></div><div class="line">// components/Component1.jsx</div><div class="line">import React from 'react';</div><div class="line"></div><div class="line">// Export =&gt; Accept importing</div><div class="line">// Default =&gt; This class will be called default when it is imported</div><div class="line">export default class Comp1 extends React.Component &#123;</div><div class="line">  render() &#123;</div><div class="line">    return (</div><div class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">        Comp 1.</div><div class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    );</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li><a href="http://stackoverflow.com/questions/36426521/what-export-default-do-in-jsx" target="_blank" rel="external">http://stackoverflow.com/questions/36426521/what-export-default-do-in-jsx</a></li>
<li><a href="http://qiita.com/HIGAX/items/28f3bec814928b7395da" target="_blank" rel="external">http://qiita.com/HIGAX/items/28f3bec814928b7395da</a></li>
</ul>
<h2 id="Insted-of-Mixin"><a href="#Insted-of-Mixin" class="headerlink" title="Insted of Mixin"></a>Insted of Mixin</h2><p>In ES6 Style, we can not use mixin in React.js.<br>So, I create function and use it.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// lib/DataBindComponent.jsx</span></div><div class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">handleChange</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">  <span class="keyword">const</span> newState = &#123;&#125;;</div><div class="line">  newState[e.target.name] = e.target.value;</div><div class="line">  <span class="keyword">this</span>.setState(newState);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// components/Hello.jsx</span></div><div class="line"><span class="keyword">import</span> &#123;handleChange&#125; <span class="keyword">from</span> <span class="string">'../lib/DataBindComponent.jsx'</span>;</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">Hello</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</div><div class="line">  state = &#123;</div><div class="line">    <span class="attr">name</span>: <span class="string">''</span></div><div class="line">  &#125;</div><div class="line"></div><div class="line">  render() &#123;</div><div class="line">     <span class="keyword">return</span> (</div><div class="line">       <span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'text'</span> <span class="attr">name</span>=<span class="string">'name'</span> </span></span></div><div class="line">               <span class="attr">value</span>=<span class="string">&#123;this.state.name&#125;</span></div><div class="line">               <span class="attr">onChange</span>=<span class="string">&#123;handleChange.bind(this)&#125;</span> /&gt;</div><div class="line">     );</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li><a href="https://facebook.github.io/react/blog/2015/01/27/react-v0.13.0-beta-1.html" target="_blank" rel="external">https://facebook.github.io/react/blog/2015/01/27/react-v0.13.0-beta-1.html</a></li>
<li><a href="https://facebook.github.io/react/blog/2016/07/13/mixins-considered-harmful.html" target="_blank" rel="external">https://facebook.github.io/react/blog/2016/07/13/mixins-considered-harmful.html</a></li>
</ul>
<h2 id="Allow-function"><a href="#Allow-function" class="headerlink" title="Allow function"></a>Allow function</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Manually bind, wherever you need to</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">PostInfo</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</div><div class="line">  <span class="keyword">constructor</span>(props) &#123;</div><div class="line">    <span class="keyword">super</span>(props);</div><div class="line">    <span class="comment">// Manually bind this method to the component instance...</span></div><div class="line">    <span class="keyword">this</span>.handleOptionsButtonClick = <span class="keyword">this</span>.handleOptionsButtonClick.bind(<span class="keyword">this</span>);</div><div class="line">  &#125;</div><div class="line">  handleOptionsButtonClick(e) &#123;</div><div class="line">    <span class="comment">// ...to ensure that 'this' refers to the component instance here.</span></div><div class="line">    <span class="keyword">this</span>.setState(&#123;<span class="attr">showOptionsModal</span>: <span class="literal">true</span>&#125;);</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Special-Thanks"><a href="#Special-Thanks" class="headerlink" title="Special Thanks"></a>Special Thanks</h2><ul>
<li><a href="https://babeljs.io/blog/2015/06/07/react-on-es6-plus" target="_blank" rel="external">React on ES6+ · Babel</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This article describes React.js on ES6+ tips for beginner.&lt;/p&gt;
    
    </summary>
    
      <category term="React.js" scheme="https://blog.morizyun.com/categories/React-js/"/>
    
    
  </entry>
  
  <entry>
    <title>What are mock and stub used in unit testing?</title>
    <link href="https://blog.morizyun.com/blog/mock-stub-outline-rspec-ruby/"/>
    <id>https://blog.morizyun.com/blog/mock-stub-outline-rspec-ruby/</id>
    <published>2016-12-13T15:00:00.000Z</published>
    <updated>2017-04-01T05:55:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>This article is a simple explanation of mock and stub used in unit testing.</p>
<a id="more"></a>
<h2 id="What-is-stub"><a href="#What-is-stub" class="headerlink" title="What is stub?"></a>What is stub?</h2><ul>
<li>A stub is a small program routine that substitutes for a longer program.</li>
<li>You should use a stub in order to pass to the code under test.</li>
</ul>
<h2 id="What-is-mock"><a href="#What-is-mock" class="headerlink" title="What is mock?"></a>What is mock?</h2><ul>
<li>Mock is a method/object that simulates the behavior of a real method/object.</li>
<li>A mock is an object that we can set expectations on, and which will verify that the expected actions have indeed occurred. </li>
</ul>
<h2 id="Why-do-need-mock-stub"><a href="#Why-do-need-mock-stub" class="headerlink" title="Why do need mock/stub?"></a>Why do need mock/stub?</h2><p>As for why it is necessary to reproduce method / object:</p>
<ul>
<li>If you try to test everything with “real method/data”, you have to prepare all processing and data.</li>
<li>To make it easier to test objects like time.</li>
</ul>
<h2 id="Example-of-stub"><a href="#Example-of-stub" class="headerlink" title="Example of stub"></a>Example of stub</h2><p>If you want to return a specific value when a method of an object is called, prepare a stub like the following:</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># When Foo#method is invoked, :return_value will be returned</span></div><div class="line">allow(Foo).to receive(<span class="symbol">:method</span>).and_return(<span class="symbol">:return_value</span>)</div></pre></td></tr></table></figure>
<p>For example, if you write like this, “count method of Array class will always return 20”.</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">test_array = []</div><div class="line">test_array.stub(<span class="symbol">:count</span>).and_return(<span class="number">20</span>)</div><div class="line"></div><div class="line">puts test_array.count <span class="comment">#=&gt;20</span></div></pre></td></tr></table></figure>
<h2 id="Example-of-mock"><a href="#Example-of-mock" class="headerlink" title="Example of mock"></a>Example of mock</h2><p>If you want to expect that a method is called with :argument, and want to return “:return_value” when called, you should prepare the following mock:</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">allow(Foo).to receive(<span class="symbol">:method</span>).with(<span class="symbol">:argument</span>).and_return(<span class="symbol">:return_value</span>)</div></pre></td></tr></table></figure>
<p>Mock of instance method is as follow:</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">allow_any_instance_of(Foo).to receive(<span class="symbol">:method</span>).and_return(<span class="symbol">:return_value</span>)</div></pre></td></tr></table></figure>
<p>The mock that generates the error like this:</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">allow(Foo).to receive(<span class="symbol">:method</span>).and_raise(<span class="string">"boom"</span>)</div></pre></td></tr></table></figure>
<h2 id="Special-Thanks"><a href="#Special-Thanks" class="headerlink" title="Special Thanks"></a>Special Thanks</h2><ul>
<li><a href="https://relishapp.com/rspec/rspec-mocks/docs/configuring-responses/raising-an-error" target="_blank" rel="external">Raising an error - Configuring responses - RSpec Mocks - RSpec - Relish</a></li>
<li><a href="http://stackoverflow.com/questions/14987141/rspec-stub-private-method%20" target="_blank" rel="external">ruby on rails - RSpec: Stub private method - Stack Overflow</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This article is a simple explanation of mock and stub used in unit testing.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Export PostgreSQL table to CSV [COPY command]</title>
    <link href="https://blog.morizyun.com/blog/copy-postgre-sql-csv-export-dump/"/>
    <id>https://blog.morizyun.com/blog/copy-postgre-sql-csv-export-dump/</id>
    <published>2016-12-13T15:00:00.000Z</published>
    <updated>2017-04-01T05:55:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>As PostgreSQL <code>COPY</code> command is convenient, I wrote this tips.<br>This command is easy and really useful, so please try it.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ psql</div></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">-- Export product table to CSV file</span></div><div class="line">\copy (<span class="keyword">SELECT</span> * <span class="keyword">FROM</span> products <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">id</span>) <span class="keyword">TO</span> <span class="string">'/tmp/produccts.csv'</span> DELIMITER <span class="string">','</span> CSV HEADER</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># If you want to see the csv including Shift-JIS(Japanese)</span></div><div class="line">nkf <span class="_">-s</span> /tmp/products.csv &gt; /tmp/converted.csv</div></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="Special-Thanks"><a href="#Special-Thanks" class="headerlink" title="Special Thanks"></a>Special Thanks</h2><ul>
<li><a href="http://stackoverflow.com/questions/2987433/how-to-import-csv-file-data-into-a-postgresql-table" target="_blank" rel="external">How to import CSV file data into a PostgreSQL table? - Stack Overflow</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;As PostgreSQL &lt;code&gt;COPY&lt;/code&gt; command is convenient, I wrote this tips.&lt;br&gt;This command is easy and really useful, so please try it.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ psql&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- Export product table to CSV file&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;\copy (&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; * &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; products &lt;span class=&quot;keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;/tmp/produccts.csv&#39;&lt;/span&gt; DELIMITER &lt;span class=&quot;string&quot;&gt;&#39;,&#39;&lt;/span&gt; CSV HEADER&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# If you want to see the csv including Shift-JIS(Japanese)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;nkf &lt;span class=&quot;_&quot;&gt;-s&lt;/span&gt; /tmp/products.csv &amp;gt; /tmp/converted.csv&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>RSpec tesiting for rake task [Ruby on Rails]</title>
    <link href="https://blog.morizyun.com/blog/rake-rspec-testing-rails-ruby/"/>
    <id>https://blog.morizyun.com/blog/rake-rspec-testing-rails-ruby/</id>
    <published>2016-12-13T15:00:00.000Z</published>
    <updated>2017-04-01T06:22:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>I summarized the procedure of the RSpec test in this article.<br>Since I summarized it as simple as possible, please read through those who are trying to create Rake task for the first time.</p>
<a id="more"></a>
<h2 id="Creating-a-Rake-task-file"><a href="#Creating-a-Rake-task-file" class="headerlink" title="Creating a Rake task file"></a>Creating a Rake task file</h2><p>The following command creates a Rake task file in <code>lib/tasks</code>: <br><br>(Please change “report”.)</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ rails generate task report</div></pre></td></tr></table></figure>
<p>Please write the following code in the above <code>lib/tasks/report.rake</code>:</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">namespace <span class="symbol">:report</span> <span class="keyword">do</span></div><div class="line">  <span class="comment"># desc is required</span></div><div class="line">  desc <span class="string">'Generate report'</span></div><div class="line">  </div><div class="line">  <span class="comment"># : Environment is required to access Rails environment</span></div><div class="line">  task <span class="symbol">generate:</span> <span class="symbol">:environment</span> <span class="keyword">do</span></div><div class="line">    <span class="comment"># Write something</span></div><div class="line">    ReportGenerator.generate</div><div class="line">  <span class="keyword">end</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
<p>After the coding, you can execute <code>rake report:generate</code> command!</p>
<h2 id="RSpec-for-rake-task"><a href="#RSpec-for-rake-task" class="headerlink" title="RSpec for rake task"></a>RSpec for rake task</h2><h3 id="Executing-rake-task-in-RSpec"><a href="#Executing-rake-task-in-RSpec" class="headerlink" title="Executing rake task in RSpec"></a>Executing rake task in RSpec</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">require</span> <span class="string">'rails_helper'</span></div><div class="line"><span class="keyword">require</span> <span class="string">'rake'</span></div><div class="line"></div><div class="line">describe <span class="string">'rake task reporting'</span> <span class="keyword">do</span></div><div class="line">  before(<span class="symbol">:all</span>) <span class="keyword">do</span></div><div class="line">    @rake = Rake::Application.new</div><div class="line">    Rake.application = @rake</div><div class="line">    Rake.application.rake_require <span class="string">'tasks/report'</span> <span class="comment"># Point 1</span></div><div class="line">    Rake::Task.define_task(<span class="symbol">:environment</span>)</div><div class="line">  <span class="keyword">end</span></div><div class="line"></div><div class="line">  before(<span class="symbol">:each</span>) <span class="keyword">do</span></div><div class="line">    @rake[task].reenable  <span class="comment"># Point 2</span></div><div class="line">  <span class="keyword">end</span></div><div class="line"></div><div class="line">  describe <span class="string">'report:generate'</span> <span class="keyword">do</span></div><div class="line">    let(<span class="symbol">:task</span>) &#123; <span class="string">'report:generate'</span> &#125;</div><div class="line">    it <span class="string">'is succeed'</span> <span class="keyword">do</span></div><div class="line">      expect(@rake[task].invoke).to be_truthy</div><div class="line">    <span class="keyword">end</span></div><div class="line">  <span class="keyword">end</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
<h3 id="Executing-model-method"><a href="#Executing-model-method" class="headerlink" title="Executing model method"></a>Executing model method</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">namespace <span class="symbol">:report</span></div><div class="line">  desc <span class="string">'Generate report'</span></div><div class="line">  it <span class="string">'generates report'</span> <span class="keyword">do</span></div><div class="line">    <span class="comment"># do something</span></div><div class="line">  <span class="keyword">end</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
<p>It’s so simple to execute unit testing.<br>In addition, if you type ReportGenerator.generate on rails console, you can also perform exactly the same processing as the Rake task.</p>
<h2 id="Special-Thanks"><a href="#Special-Thanks" class="headerlink" title="Special Thanks"></a>Special Thanks</h2><ul>
<li><a href="http://qiita.com/kawakubox/items/26cf71a14bd5827175f6" target="_blank" rel="external">http://qiita.com/kawakubox…</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;I summarized the procedure of the RSpec test in this article.&lt;br&gt;Since I summarized it as simple as possible, please read through those who are trying to create Rake task for the first time.&lt;/p&gt;
    
    </summary>
    
      <category term="RSpec" scheme="https://blog.morizyun.com/categories/RSpec/"/>
    
    
  </entry>
  
  <entry>
    <title>Effective Procedures to Setup new Mac El Captain For Rubyist</title>
    <link href="https://blog.morizyun.com/blog/setup-procedure-develop-ruby-rails-mac-el-captain/"/>
    <id>https://blog.morizyun.com/blog/setup-procedure-develop-ruby-rails-mac-el-captain/</id>
    <published>2016-11-28T15:00:00.000Z</published>
    <updated>2017-04-01T05:55:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>This article describes effective procedures for Rubyists to setup new Mac OS El Captain.</p>
<a id="more"></a>
<h2 id="Install-some-applications"><a href="#Install-some-applications" class="headerlink" title="Install some applications"></a>Install some applications</h2><h3 id="For-development"><a href="#For-development" class="headerlink" title="For development"></a>For development</h3><ul>
<li><strong><a href="https://developer.apple.com/xcode/" target="_blank" rel="external">XCode</a></strong> : IDE for Swift and Objective-C</li>
<li><strong><a href="https://www.jetbrains.com/idea/" target="_blank" rel="external">IntelliJ IDEA the Java IDE</a></strong> : Capable and Ergonomic IDE for a lot of languages</li>
<li><strong><a href="https://www.iterm2.com/" target="_blank" rel="external">iTerm</a></strong> : Modern and functional terminal app</li>
<li><strong><a href="https://www.sourcetreeapp.com/" target="_blank" rel="external">SourceTree</a></strong> : Free Git Client</li>
<li><strong><a href="https://code.visualstudio.com/docs/editor/setup" target="_blank" rel="external">Visual Studio Code</a></strong> : Redefined Code Editor</li>
<li><strong><a href="https://github.com/matryer/bitbar" target="_blank" rel="external">BitBar</a></strong> : Programmable menu bar on Mac</li>
<li><strong><a href="https://www.virtualbox.org/wiki/Downloads" target="_blank" rel="external">VM VirtualBox</a></strong> : Manager for virtual machine</li>
<li><strong><a href="https://www.docker.com/products/docker-toolbox" target="_blank" rel="external">Docker Toolbox</a></strong> : Installer for docker tools</li>
<li><strong><a href="https://toolbelt.heroku.com/" target="_blank" rel="external">Heroku Toolbelt</a></strong> : CLI tool for creating and managing Heroku apps</li>
</ul>
<h3 id="For-productivity"><a href="#For-productivity" class="headerlink" title="For productivity"></a>For productivity</h3><ul>
<li><strong><a href="https://www.google.co.jp/intl/ja/chrome/browser/" target="_blank" rel="external">Chrome</a></strong> : Effective browser</li>
<li><strong><a href="https://www.google.co.jp/ime/" target="_blank" rel="external">Google Japanese Input</a></strong> : IME for Japanese</li>
<li><strong><a href="https://www.boastr.net/" target="_blank" rel="external">Better Touch Tool</a></strong> : Improve your keyboard, mouse, trackpad and etc</li>
<li><strong><a href="https://www.dropbox.com/" target="_blank" rel="external">Dropbox</a></strong> : Keeping your data to synchronize Dropbox server</li>
<li><strong><a href="https://evernote.com/?var=2&amp;noredirect" target="_blank" rel="external">Evernote</a></strong> : Simplify cloud text editor</li>
<li><strong><a href="https://justgetflux.com/" target="_blank" rel="external">f.lux</a></strong> : Computer’s display adapt to the time of day</li>
<li><strong><a href="https://www.avira.com/" target="_blank" rel="external">Avira</a></strong> : Free security tool</li>
<li><strong><a href="https://www.skype.com/" target="_blank" rel="external">Skype</a></strong> : Free chat tool</li>
<li><strong><a href="https://www.tripmode.ch/" target="_blank" rel="external">TripMode</a></strong> : Reduce your mobile data consumption</li>
<li><strong><a href="http://www.enduranceapp.com/" target="_blank" rel="external">Endurance</a></strong> : Boost your Mac Battery</li>
<li><strong><a href="https://freemacsoft.net/appcleaner/" target="_blank" rel="external">AppCleaner</a></strong> : Uninstaller for unwanted apps</li>
<li><strong><a href="https://evernote.com/intl/jp/skitch/" target="_blank" rel="external">Skitch</a></strong> : Make your point with quick sketches</li>
</ul>
<h2 id="Homebrew"><a href="#Homebrew" class="headerlink" title="Homebrew"></a>Homebrew</h2><p>Before any installation, you should approve XCode license agreement by the following command:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo xcodebuild -license</div></pre></td></tr></table></figure>
<p>You should execute the following command to install <strong><a href="http://brew.sh/" target="_blank" rel="external">Homebrew</a></strong>:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</div></pre></td></tr></table></figure>
<p>If you are asked about XCode Command line tool while installing with Homebrew, please install it.</p>
<h2 id="Oh-my-zsh"><a href="#Oh-my-zsh" class="headerlink" title="Oh-my-zsh"></a>Oh-my-zsh</h2><p>If you want to use a coftable Zsh customized by the community, let’s install<br><strong><a href="https://github.com/robbyrussell/oh-my-zsh" target="_blank" rel="external">robbyrussell/oh-my-zsh</a></strong>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</div></pre></td></tr></table></figure>
<h2 id="git"><a href="#git" class="headerlink" title="git"></a>git</h2><p>You should install git command line tool:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ brew install git</div><div class="line">$ git config --global user.name &quot;USER_NAME&quot;</div><div class="line">$ git config --global user.email email@example.com</div><div class="line">$ git config --global tag.sort version:refname</div></pre></td></tr></table></figure>
<p>After installing git, we recommend to set global <code>.gitignore</code>:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># generator about .gitignore</div><div class="line">$ brew install gibo</div><div class="line"></div><div class="line"># Set some unnecessary files of JetBrains and Mac to .gitignore</div><div class="line">$ gibo JetBrains OSX &gt; .gitignore</div><div class="line"></div><div class="line"># Set the .gitignore to set git global setting</div><div class="line">$ git config --global --add core.excludesfile &quot;$HOME/.gitignore&quot;</div></pre></td></tr></table></figure>
<p>You should set basic passwords to skip filling password by <code>vi ~/.netrc</code>:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">machine github.com</div><div class="line">login USERNAME</div><div class="line">password PASSWORD</div></pre></td></tr></table></figure>
<p>In addition, please add a alias <code>git push-f</code> to <code>vi ~/.gitconfig</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[alias]</div><div class="line">  push-f = push --force-with-lease</div></pre></td></tr></table></figure>
<h2 id="autojump"><a href="#autojump" class="headerlink" title="autojump"></a>autojump</h2><p>If you want to fill a path more quickly,<br><strong><a href="https://github.com/wting/autojump" target="_blank" rel="external">wting/autojump</a></strong> is one of the greatest solutions.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ brew install autojump</div></pre></td></tr></table></figure>
<p>After installing, set the following setting by <code>vi ~/.zshrc</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># autojump</div><div class="line">[[ -s $(brew --prefix)/etc/profile.d/autojump.sh ]] &amp;&amp; . $(brew --prefix)/etc/profile.d/autojump.sh</div></pre></td></tr></table></figure>
<p>After the setting, execute the following command to reflect the setting:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ source ~/.zshrc</div></pre></td></tr></table></figure>
<h2 id="Font-Ricty"><a href="#Font-Ricty" class="headerlink" title="Font Ricty"></a>Font Ricty</h2><p>Ricty is a fonts for programming, if you want to try it, please set the following command:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"># Installing Ricty</div><div class="line">$ brew install automake</div><div class="line">$ brew tap sanemat/font</div><div class="line">$ brew install Caskroom/cask/xquartz</div><div class="line">$ brew install ricty</div><div class="line"></div><div class="line"># Copy generated font information</div><div class="line">$ cp -f /usr/local/Cellar/ricty/3.2.2/share/fonts/Ricty*.ttf ~/Library/Fonts/</div><div class="line">$ fc-cache -vf</div><div class="line"></div><div class="line"># Setting about anti-alias</div><div class="line">$ defaults -currentHost write -globalDomain AppleFontSmoothing -int 2</div></pre></td></tr></table></figure>
<h2 id="rbenv"><a href="#rbenv" class="headerlink" title="rbenv"></a>rbenv</h2><p>To avoid installing unnecessary documents, add the following setting <code>vim ~/.gemrc</code>:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">install: --no-document</div><div class="line">update: --no-document</div></pre></td></tr></table></figure>
<p>After the above setting, let’s install the following rbenv and ruby-build:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># Installing rbenv / ruby-build</div><div class="line">$ brew install rbenv ruby-build</div><div class="line"></div><div class="line"># Setting to installing gems when introducing new version</div><div class="line">$ git clone https://github.com/sstephenson/rbenv-default-gems.git ~/.rbenv/plugins/rbenv-default-gems</div><div class="line"></div><div class="line"># Setting default install gems</div><div class="line">$ echo &apos;bundler\nrails\npg\ndokku-cli&apos; &gt; ~/.rbenv/default-gems</div></pre></td></tr></table></figure>
<p>Edit the following setting by <code>vi ~/.zshrc</code>:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># rbenv</div><div class="line">[[ -d ~/.rbenv  ]] &amp;&amp; \</div><div class="line">  export PATH=$&#123;HOME&#125;/.rbenv/bin:$&#123;PATH&#125; &amp;&amp; \</div><div class="line">  eval &quot;$(rbenv init -)&quot;</div></pre></td></tr></table></figure>
<p>The setting is reflected by the following command:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ source ~/.zshrc</div></pre></td></tr></table></figure>
<p>Install Ruby by rbenv:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># show list of ruby versions which is able to install</div><div class="line">$ rbenv install -l</div><div class="line"></div><div class="line"># Install latest ruby version(e.g. 2.3.1)</div><div class="line">$ rbenv install 2.3.1</div><div class="line">$ rbenv global 2.3.1</div></pre></td></tr></table></figure>
<h2 id="PostgreSQL"><a href="#PostgreSQL" class="headerlink" title="PostgreSQL"></a>PostgreSQL</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># Install PostgreSQL</div><div class="line">$ brew install postgresql</div><div class="line"></div><div class="line"># To have launchd start postgresql at login:</div><div class="line">ln -sfv /usr/local/opt/postgresql/*plist ~/Library/LaunchAgents</div><div class="line"></div><div class="line"># Then to load postgresql now:</div><div class="line">launchctl load ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist</div></pre></td></tr></table></figure>
<h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h2><p>I think that we will use <strong><a href="https://www.docker.com/" target="_blank" rel="external">Docker</a></strong> in the near feature.<br>If you agree with my opinion, please install some docker images:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ docker pull ruby:2.3.1</div><div class="line">$ docker pull postgres:latest</div><div class="line">$ docker pull redis:latest</div><div class="line">$ docker pull ubuntu:14.04</div></pre></td></tr></table></figure>
<p>After downloading the docker image, please set alias to <code>vi .zshrc</code>:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># Docker</div><div class="line">alias d=&apos;docker&apos;</div><div class="line">alias dc=&apos;docker-compose&apos;</div><div class="line">alias dm=&apos;docker-machine&apos;</div></pre></td></tr></table></figure>
<p>After setting, reflect the upper settings:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">source ~/.zshrc</div></pre></td></tr></table></figure>
<h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><h3 id="Change-function-keys"><a href="#Change-function-keys" class="headerlink" title="Change function keys"></a>Change function keys</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Application &gt; System Preferences &gt; Keybord &gt; Use all F1, F2, etc...</div></pre></td></tr></table></figure>
<h3 id="Change-shortcut-to-change-active-window"><a href="#Change-shortcut-to-change-active-window" class="headerlink" title="Change shortcut to change active window"></a>Change shortcut to change active window</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Application &gt; System Preferences &gt; Keybord &gt; Shortcut &gt; Keybord &gt; Move focus next window</div></pre></td></tr></table></figure>
<h3 id="Change-computer-name"><a href="#Change-computer-name" class="headerlink" title="Change computer name"></a>Change computer name</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Application &gt; System Preferences &gt; Sharing &gt; Computer Name</div></pre></td></tr></table></figure>
<h3 id="Change-cursor-speed"><a href="#Change-cursor-speed" class="headerlink" title="Change cursor speed"></a>Change cursor speed</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Application &gt; System Preferences &gt; Mouse &gt; Tracking Speed</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This article describes effective procedures for Rubyists to setup new Mac OS El Captain.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>How to use alternate created_at / updated_at column</title>
    <link href="https://blog.morizyun.com/blog/alternate-update_at-created_at-column-active-record/"/>
    <id>https://blog.morizyun.com/blog/alternate-update_at-created_at-column-active-record/</id>
    <published>2016-11-28T15:00:00.000Z</published>
    <updated>2017-04-01T05:55:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>This article shows 2 ways for “How to use alternate created_at/updated_at column.</p>
<a id="more"></a> 
<h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><p>Please add the following code to <code>config/initializers/timestamp.rb</code>.</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">module</span> <span class="title">ActiveRecord</span></span></div><div class="line">  <span class="class"><span class="keyword">module</span> <span class="title">Timestamp</span></span></div><div class="line">    private</div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">timestamp_attributes_for_update</span></span></div><div class="line">      [<span class="symbol">:modifyed_day</span>]</div><div class="line">    <span class="keyword">end</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">timestamp_attributes_for_create</span></span></div><div class="line">      [<span class="symbol">:created_day</span>]</div><div class="line">    <span class="keyword">end</span></div><div class="line">  <span class="keyword">end</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
<h2 id="Add-callback-to-model"><a href="#Add-callback-to-model" class="headerlink" title="Add callback to model"></a>Add callback to model</h2><p>Please add callback <code>before_update</code> to a model class like this:</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Article</span> &lt; ApplicationRecord</span></div><div class="line">  before_update <span class="symbol">:set_modified_day</span></div><div class="line"></div><div class="line">  private</div><div class="line">  </div><div class="line">  <span class="function"><span class="keyword">def</span> <span class="title">set_modified_day</span></span></div><div class="line">    <span class="keyword">self</span>.set_modified_day = Time.zone.now</div><div class="line">  <span class="keyword">end</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
<h2 id="Special-Thanks"><a href="#Special-Thanks" class="headerlink" title="Special Thanks"></a>Special Thanks</h2><ul>
<li><a href="http://stackoverflow.com/questions/5173109/ruby-activerecord-how-to-use-alternate-updated-at-column" target="_blank" rel="external">ruby activerecord how to use alternate updated_at column - Stack Overflow</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This article shows 2 ways for “How to use alternate created_at/updated_at column.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Prevent &#39;ArgumentError: invalid byte sequence in UTF-8&#39; on Faraday[Ruby]</title>
    <link href="https://blog.morizyun.com/blog/faraday-to-prevent-invalid-byte-sequence-error/"/>
    <id>https://blog.morizyun.com/blog/faraday-to-prevent-invalid-byte-sequence-error/</id>
    <published>2016-11-25T15:00:00.000Z</published>
    <updated>2017-04-01T05:55:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is a tips to prevent “<strong>ArgumentError: invalid byte sequence in UTF-8</strong>“.</p>
<h2 id="Sample-Code"><a href="#Sample-Code" class="headerlink" title="Sample Code"></a>Sample Code</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">url = <span class="string">"http://sample.com/search?q=%A0"</span></div><div class="line"></div><div class="line">Faraday.get(url)</div><div class="line"><span class="symbol">ArgumentError:</span> invalid byte sequence <span class="keyword">in</span> UTF-<span class="number">8</span></div><div class="line"></div><div class="line">Faraday.get(url.force_encoding(Encoding::BINARY))</div><div class="line">=&gt; #&lt;Faraday::Response:0x007fd8ca826ce8...</div></pre></td></tr></table></figure>
<p>Happy Hacking!</p>
<a id="more"></a>
<h2 id="Special-Thanks"><a href="#Special-Thanks" class="headerlink" title="Special Thanks"></a>Special Thanks</h2><ul>
<li><a href="https://github.com/lostisland/faraday/issues/476" target="_blank" rel="external">ArgumentError: invalid byte sequence in US-ASCII · Issue #476 · lostisland/faraday</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is a tips to prevent “&lt;strong&gt;ArgumentError: invalid byte sequence in UTF-8&lt;/strong&gt;“.&lt;/p&gt;
&lt;h2 id=&quot;Sample-Code&quot;&gt;&lt;a href=&quot;#Sample-Code&quot; class=&quot;headerlink&quot; title=&quot;Sample Code&quot;&gt;&lt;/a&gt;Sample Code&lt;/h2&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;url = &lt;span class=&quot;string&quot;&gt;&quot;http://sample.com/search?q=%A0&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Faraday.get(url)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;ArgumentError:&lt;/span&gt; invalid byte sequence &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; UTF-&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Faraday.get(url.force_encoding(Encoding::BINARY))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;=&amp;gt; #&amp;lt;Faraday::Response:0x007fd8ca826ce8...&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Happy Hacking!&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Using Redis for caching &amp; session management with Ruby on Rails</title>
    <link href="https://blog.morizyun.com/blog/redis-store-rails-rspec/"/>
    <id>https://blog.morizyun.com/blog/redis-store-rails-rspec/</id>
    <published>2016-11-18T15:00:00.000Z</published>
    <updated>2017-04-01T05:55:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>This article shows about cacing data &amp; session management with Ruby on Rails. </p>
<a id="more"></a> 
<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>Add the following “<strong><a href="https://github.com/redis-store/redis-rails" target="_blank" rel="external">redis-rails</a></strong>“ to your <code>Gemfile</code>:</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Redis stores</span></div><div class="line">gem <span class="string">'redis-rails'</span></div></pre></td></tr></table></figure>
<p>Let’s execute <code>bundle install</code> on your terminal.</p>
<h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><p>Add the following to your environment variable or <code>.env</code>:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">REDIS_URL=&quot;redis://localhost:6379/0/cache&quot;</div></pre></td></tr></table></figure>
<p>Configure to use Redis for cache store is as follows:</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># config/application.rb</span></div><div class="line"><span class="comment"># expires_in is optional</span></div><div class="line">config.cache_store = <span class="symbol">:redis_store</span>, ENV.fetch(<span class="string">'REDIS_URL'</span>), &#123; <span class="symbol">expires_in:</span> <span class="number">90</span>.minutes &#125;</div></pre></td></tr></table></figure>
<p>If you want to use Redis as a backend for sessions, you should also set:</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># config/initializers/session_store.rb</span></div><div class="line">MyApplication::Application.config.session_store <span class="symbol">:redis_store</span>, <span class="symbol">servers:</span> <span class="string">"redis://localhost:6379/0/session"</span></div></pre></td></tr></table></figure>
<p>If you want to skip to cache on TEST environment, please set NullStore:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># config/environments/test.rb:</div><div class="line">config.cache_store = :null_store</div></pre></td></tr></table></figure>
<p>Happy Hacking!</p>
<h2 id="Special-Thanks"><a href="#Special-Thanks" class="headerlink" title="Special Thanks"></a>Special Thanks</h2><ul>
<li><a href="http://stackoverflow.com/questions/13309121/is-rails-cache-purged-between-tests" target="_blank" rel="external">caching - is Rails.cache purged between tests? - Stack Overflow</a></li>
<li><a href="http://morizyun.github.io/blog/redis-rails-session-ruby/" target="_blank" rel="external">http://morizyun.github.io/blog/redis-rails-session-ruby/</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This article shows about cacing data &amp;amp; session management with Ruby on Rails. &lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Use Elasticcache with Elasticbeanstalk</title>
    <link href="https://blog.morizyun.com/blog/redis-elasticbeanstalk-elasticcache-ruby/"/>
    <id>https://blog.morizyun.com/blog/redis-elasticbeanstalk-elasticcache-ruby/</id>
    <published>2016-11-18T15:00:00.000Z</published>
    <updated>2017-04-01T05:55:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>This article describes how to use Elasticcache with Elasticbeanstalk.</p>
<a id="more"></a> 
<h2 id="Prepare-Elasticcache"><a href="#Prepare-Elasticcache" class="headerlink" title="Prepare Elasticcache"></a>Prepare Elasticcache</h2><ul>
<li>(1) Go to <strong><a href="https://ap-northeast-1.console.aws.amazon.com/elasticache" target="_blank" rel="external">Elasticcache Console</a></strong></li>
<li>(2) Create new instance(Redis/Memcached) on Elasticcache</li>
<li>(3) Create security group for the instance and configure it to use the instance by Elasticbeanstalk security group</li>
</ul>
<h2 id="Confirmation"><a href="#Confirmation" class="headerlink" title="Confirmation"></a>Confirmation</h2><p>You should confirm to connect the Elasticcache from Elasticbeanstalk instance.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># local</span></div><div class="line">$ eb ssh</div><div class="line"></div><div class="line"><span class="comment"># Elasticbeanstalk instance</span></div><div class="line">$ sudo su -</div><div class="line">$ <span class="built_in">cd</span> /tmp</div><div class="line">$ yum install -y git</div><div class="line">$ git <span class="built_in">clone</span> http://github.com/antirez/redis.git</div><div class="line">$ <span class="built_in">cd</span> redis &amp;&amp; git checkout 3.2 <span class="comment"># Please set newest Redis version</span></div><div class="line">$ make redis-cli</div><div class="line">$ <span class="built_in">cd</span> src</div><div class="line">$ ./redis-cli -h ELASTICCACHE_ENDPOINT -p ELASTICCACHE_PORT</div><div class="line"><span class="comment">#=&gt; ELASTICCACHE_ENDPOINT &gt; ... &lt;= successful!</span></div></pre></td></tr></table></figure>
<p>Happy Hacking!</p>
<h2 id="Special-Thanks"><a href="#Special-Thanks" class="headerlink" title="Special Thanks"></a>Special Thanks</h2><ul>
<li><a href="http://stackoverflow.com/questions/21795340/linux-install-redis-cli-only" target="_blank" rel="external">Linux - Install redis-cli only - Stack Overflow</a></li>
<li><a href="http://qiita.com/u651601f/items/a0624601047db4f02808" target="_blank" rel="external">http://qiita.com/u651601f/items/a0624601047db4f02808</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This article describes how to use Elasticcache with Elasticbeanstalk.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>How to upload gziped file to S3 from URL[Ruby]</title>
    <link href="https://blog.morizyun.com/blog/ruby-upload-gziped-file-to-s3/"/>
    <id>https://blog.morizyun.com/blog/ruby-upload-gziped-file-to-s3/</id>
    <published>2016-11-12T15:00:00.000Z</published>
    <updated>2017-04-01T05:55:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>This article shows how to upload gziped file to S3 from URL by Ruby.</p>
<a id="more"></a> 
<h2 id="Gemfile"><a href="#Gemfile" class="headerlink" title="Gemfile"></a>Gemfile</h2><p>Please add RubyGem <strong><a href="https://github.com/aws/aws-sdk-ruby" target="_blank" rel="external">aws/aws-sdk-ruby</a></strong> and <strong><a href="https://github.com/bkeepers/dotenv" target="_blank" rel="external">bkeepers/dotenv</a></strong> to <code>Gemfile</code>:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># Loads environment variables from `.env`</div><div class="line">gem &apos;dotenv&apos;</div><div class="line"></div><div class="line"># AWS SDK for Ruby</div><div class="line">gem &apos;aws-sdk&apos;</div></pre></td></tr></table></figure>
<h2 id="Environment-Variables"><a href="#Environment-Variables" class="headerlink" title="Environment Variables"></a>Environment Variables</h2><p>Please set environment variables using <code>.env</code> or etc.</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">AMAZON_AWS_REGION=<span class="string">"AWS Reagion"</span></div><div class="line">AMAZON_AWS_ACCESS_KEY_ID=<span class="string">"AWS Access Key Id"</span></div><div class="line">AMAZON_AWS_SECRET_ACCESS_KEY=<span class="string">"AWS Secret Access Key"</span></div><div class="line">AMAZON_AWS_S3_BUCKET_NAME=<span class="string">"AWS S3 Bucket name"</span></div></pre></td></tr></table></figure>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><p>The following code execute like them:</p>
<ul>
<li>Get a file from argment URL</li>
<li>Gzip the file and create a tmp file</li>
<li>Upload the gziped file to S3 with <code>public_read</code> access control</li>
</ul>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">module</span> <span class="title">S3Utility</span></span></div><div class="line">  <span class="class"><span class="keyword">class</span> &lt;&lt; self</span></div><div class="line">    <span class="comment"># <span class="doctag">@return</span> [String] S3 URL</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">upload_by_url</span><span class="params">(<span class="symbol">from_url:</span>, <span class="symbol">object_key:</span>)</span></span></div><div class="line">      content = open(from_url).read</div><div class="line">      fail <span class="string">"fail to get url: <span class="subst">#&#123;from_url&#125;</span>"</span> <span class="keyword">if</span> content.blank?</div><div class="line"></div><div class="line">      temp = Tempfile.new.tap <span class="keyword">do</span> <span class="params">|t|</span></div><div class="line">        t.binmode</div><div class="line">        t.write(_gzip(content))</div><div class="line">        t.close</div><div class="line">      <span class="keyword">end</span></div><div class="line"></div><div class="line">      obj = _bucket.object(object_key)</div><div class="line">      result = obj.upload_file(temp.path, <span class="symbol">acl:</span> <span class="string">'public-read'</span>, <span class="symbol">content_encoding:</span> <span class="string">'gzip'</span>)</div><div class="line">      fail <span class="string">"fail to upload url: <span class="subst">#&#123;from_url&#125;</span>, object_key: <span class="subst">#&#123;object_key&#125;</span>"</span> unless result</div><div class="line">      _url(object_key)</div><div class="line">    <span class="keyword">rescue</span> =&gt; e</div><div class="line">      Airbrake.notify(e)</div><div class="line">      <span class="literal">nil</span></div><div class="line">    <span class="keyword">end</span></div><div class="line"></div><div class="line">    private</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_url</span><span class="params">(object_key)</span></span></div><div class="line">      <span class="string">"https://<span class="subst">#&#123;ENV[<span class="string">'AMAZON_AWS_S3_BUCKET_NAME'</span>]&#125;</span>.s3-ap-northeast-1.amazonaws.com/<span class="subst">#&#123;object_key&#125;</span>"</span></div><div class="line">    <span class="keyword">end</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_bucket</span></span></div><div class="line">      @bucket <span class="params">||</span>= Aws::S3::Resource.new(</div><div class="line">          <span class="symbol">region:</span>            ENV[<span class="string">'AMAZON_AWS_REGION'</span>],</div><div class="line">          <span class="symbol">access_key_id:</span>     ENV[<span class="string">'AMAZON_AWS_ACCESS_KEY_ID'</span>],</div><div class="line">          <span class="symbol">secret_access_key:</span> ENV[<span class="string">'AMAZON_AWS_SECRET_ACCESS_KEY'</span>],</div><div class="line">      ).bucket(ENV[<span class="string">'AMAZON_AWS_S3_BUCKET_NAME'</span>])</div><div class="line">    <span class="keyword">end</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_gzip</span><span class="params">(data)</span></span></div><div class="line">      sio = StringIO.new</div><div class="line">      gz = Zlib::GzipWriter.new(sio)</div><div class="line">      gz.write(data)</div><div class="line">      gz.close</div><div class="line">      sio.string</div><div class="line">    <span class="keyword">end</span></div><div class="line">  <span class="keyword">end</span></div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line">url = <span class="string">'http://example.com/hoge.jpg'</span></div><div class="line">object_key = <span class="string">'/images/hoge.jpg'</span></div><div class="line">S3Utility.upload_by(<span class="symbol">from_url:</span> url, <span class="symbol">object_key:</span> object_key)</div><div class="line"><span class="comment">#=&gt; https://xxx.s3-ap-northeast-1.amazonaws.com/images/hoge.jpg</span></div></pre></td></tr></table></figure>
<p>Happy Hacking!</p>
<h2 id="Special-Thanks"><a href="#Special-Thanks" class="headerlink" title="Special Thanks"></a>Special Thanks</h2><ul>
<li><a href="http://akasata.com/articles/292" target="_blank" rel="external">http://akasata.com/articles/292</a></li>
<li><a href="http://kinopyo.com/ja/blog/upload-file-to-s3-with-aws-sdk-v2" target="_blank" rel="external">http://kinopyo.com/ja/blog/upload-file-to-s3-with-aws-sdk-v2</a></li>
<li><a href="http://yamayo.github.io/blog/2013/12/16/aws-sdk-for-ruby-to-gzip/" target="_blank" rel="external">http://yamayo.github.io/blog/2013/12/16/aws-sdk-for-ruby-to-gzip/</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This article shows how to upload gziped file to S3 from URL by Ruby.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Deploy Rails App to ElasitcBeanstalk on wercker</title>
    <link href="https://blog.morizyun.com/blog/wercker-deploy-elasitic-beanstalk.1/"/>
    <id>https://blog.morizyun.com/blog/wercker-deploy-elasitic-beanstalk.1/</id>
    <published>2016-11-11T15:00:00.000Z</published>
    <updated>2017-04-01T05:55:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>I published “wercker step” to deploy an application to Elastic Beanstalk instance using AWS CLI.</p>
<p><strong><a href="https://github.com/morizyun/eb-deploy" target="_blank" rel="external">morizyun/eb-deploy - GitHub</a></strong></p>
<p>This aritcle describes how to use the wercker  step and outline of the step.</p>
<a id="more"></a> 
<h2 id="Configuration-for-wercker"><a href="#Configuration-for-wercker" class="headerlink" title="Configuration for wercker"></a>Configuration for wercker</h2><p>In the wercker.yml of your application use the following step definition:</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="bullet">-</span> <span class="string">morizyun/eb-deploy:</span></div><div class="line"><span class="attr">    access_key:</span> <span class="string">$AWS_ACCESS_KEY</span></div><div class="line"><span class="attr">    secret_key:</span> <span class="string">$AWS_SECRET_KEY</span></div><div class="line"><span class="attr">    app_name:</span>   <span class="string">$AWS_APP_NAME</span></div><div class="line"><span class="attr">    env_name:</span>   <span class="string">$AWS_ENV_NAME</span></div><div class="line"><span class="attr">    s3_bucket:</span>  <span class="string">$AWS_S3_BUCKET_NAME</span></div><div class="line"><span class="attr">    region:</span>     <span class="string">$AWS_REGION</span> <span class="string">(default:</span> <span class="string">ap-northeast-1)</span></div></pre></td></tr></table></figure>
<h2 id="Outline-of-the-wercker-step"><a href="#Outline-of-the-wercker-step" class="headerlink" title="Outline of the wercker step"></a>Outline of the wercker step</h2><p>Source code of the wercker step is as follows:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">export</span> UNIXTIME=`date +%s`</div><div class="line"></div><div class="line"><span class="keyword">if</span> [ ! -n <span class="string">"<span class="variable">$WERCKER_EB_DEPLOY_ACCESS_KEY</span>"</span> ]; <span class="keyword">then</span></div><div class="line">  error <span class="string">'Please specify access_key'</span></div><div class="line">  <span class="built_in">exit</span> 1</div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> [ ! -n <span class="string">"<span class="variable">$WERCKER_EB_DEPLOY_SECRET_KEY</span>"</span> ]; <span class="keyword">then</span></div><div class="line">  error <span class="string">'Please specify secret_key'</span></div><div class="line">  <span class="built_in">exit</span> 1</div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> [ ! -n <span class="string">"<span class="variable">$WERCKER_EB_DEPLOY_APP_NAME</span>"</span> ]; <span class="keyword">then</span></div><div class="line">  error <span class="string">'Please specify app_name'</span></div><div class="line">  <span class="built_in">exit</span> 1</div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> [ ! -n <span class="string">"<span class="variable">$WERCKER_EB_DEPLOY_ENV_NAME</span>"</span> ]; <span class="keyword">then</span></div><div class="line">  error <span class="string">'Please specify env_name'</span></div><div class="line">  <span class="built_in">exit</span> 1</div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> [ ! -n <span class="string">"<span class="variable">$WERCKER_EB_DEPLOY_S3_BUCKET</span>"</span> ]; <span class="keyword">then</span></div><div class="line">  error <span class="string">'Please specify s3 bucket'</span></div><div class="line">  <span class="built_in">exit</span> 1</div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> [ ! -n <span class="string">"<span class="variable">$WERCKER_EB_DEPLOY_REGION</span>"</span> ]; <span class="keyword">then</span></div><div class="line">  info <span class="string">'set default region as ap-northeast-1'</span></div><div class="line">  <span class="built_in">export</span> WERCKER_EB_DEPLOY_REGION=<span class="string">"ap-northeast-1"</span></div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line">info <span class="string">'Installing pip ...'</span></div><div class="line">sudo apt-get update</div><div class="line">sudo apt-get install -y python-pip libpython-all-dev zip</div><div class="line"></div><div class="line">info <span class="string">'Installing the AWS CLI ...'</span>;</div><div class="line">pip install awscli;</div><div class="line"><span class="built_in">export</span> PATH=~/.local/bin:<span class="variable">$PATH</span></div><div class="line">aws --version</div><div class="line"></div><div class="line">info <span class="string">'export set default values for AWS CLI tool ...'</span>;</div><div class="line"><span class="built_in">export</span> AMAZON_ACCESS_KEY_ID=<span class="variable">$WERCKER_EB_DEPLOY_ACCESS_KEY</span></div><div class="line"><span class="built_in">export</span> AMAZON_SECRET_ACCESS_KEY=<span class="variable">$WERCKER_EB_DEPLOY_SECRET_KEY</span></div><div class="line"><span class="built_in">export</span> AWS_DEFAULT_REGION=<span class="variable">$WERCKER_EB_DEPLOY_REGION</span></div><div class="line"><span class="built_in">export</span> EB_VERSION_LABEL=<span class="variable">$WERCKER_EB_DEPLOY_APP_NAME</span>.<span class="variable">$UNIXTIME</span></div><div class="line"><span class="built_in">export</span> EB_DESCRIPTION=<span class="variable">$WERCKER_EB_DEPLOY_ENV_NAME</span>,<span class="variable">$WERCKER_GIT_BRANCH</span></div><div class="line"><span class="built_in">export</span> S3_FILE_KEY=<span class="variable">$WERCKER_EB_DEPLOY_APP_NAME</span>/<span class="variable">$WERCKER_EB_DEPLOY_APP_NAME</span>.<span class="variable">$UNIXTIME</span>.zip</div><div class="line"><span class="built_in">export</span> AWS_CONFIG_FILE=<span class="variable">$HOME</span>/.aws/config</div><div class="line"></div><div class="line">info <span class="string">'create .aws/config ...'</span>;</div><div class="line">mkdir -p <span class="variable">$HOME</span>/.aws</div><div class="line"><span class="built_in">echo</span> <span class="string">'[default]'</span> &gt; <span class="variable">$HOME</span>/.aws/config</div><div class="line"><span class="built_in">echo</span> <span class="string">'output = json'</span> &gt;&gt; <span class="variable">$HOME</span>/.aws/config</div><div class="line"><span class="built_in">echo</span> <span class="string">"region = <span class="variable">$WERCKER_EB_DEPLOY_REGION</span>"</span> &gt;&gt; <span class="variable">$HOME</span>/.aws/config</div><div class="line"><span class="built_in">echo</span> <span class="string">"aws_access_key_id = <span class="variable">$WERCKER_EB_DEPLOY_ACCESS_KEY</span>"</span> &gt;&gt; <span class="variable">$HOME</span>/.aws/config</div><div class="line"><span class="built_in">echo</span> <span class="string">"aws_secret_access_key = <span class="variable">$WERCKER_EB_DEPLOY_SECRET_KEY</span>"</span> &gt;&gt; <span class="variable">$HOME</span>/.aws/config</div><div class="line"></div><div class="line">info <span class="string">'Compress source code ...'</span></div><div class="line">mkdir <span class="variable">$WERCKER_EB_DEPLOY_APP_NAME</span></div><div class="line">git archive HEAD --output=<span class="variable">$S3_FILE_KEY</span></div><div class="line"></div><div class="line">info <span class="string">'copy code to S3 ...'</span></div><div class="line">aws s3 cp --acl private <span class="variable">$S3_FILE_KEY</span> <span class="string">"s3://<span class="variable">$WERCKER_EB_DEPLOY_S3_BUCKET</span>/<span class="variable">$S3_FILE_KEY</span>"</span></div><div class="line"></div><div class="line">info <span class="string">'create elasticbeanstalk application-version ...'</span></div><div class="line">aws elasticbeanstalk create-application-version \</div><div class="line">    --region <span class="variable">$WERCKER_EB_DEPLOY_REGION</span> \</div><div class="line">    --application-name <span class="variable">$WERCKER_EB_DEPLOY_APP_NAME</span> \</div><div class="line">    --version-label <span class="variable">$EB_VERSION_LABEL</span> \</div><div class="line">    --description <span class="variable">$EB_DESCRIPTION</span> \</div><div class="line">    --source-bundle <span class="string">"&#123;\"S3Bucket\":\"<span class="variable">$WERCKER_EB_DEPLOY_S3_BUCKET</span>\", \"S3Key\":\"<span class="variable">$S3_FILE_KEY</span>\"&#125;"</span></div><div class="line"></div><div class="line">info <span class="string">'update elasticbeanstalk application ...'</span></div><div class="line">aws elasticbeanstalk update-environment \</div><div class="line">    --environment-name <span class="variable">$WERCKER_EB_DEPLOY_ENV_NAME</span> \</div><div class="line">    --description <span class="variable">$EB_DESCRIPTION</span>,<span class="variable">$WERCKER_GIT_COMMIT</span> \</div><div class="line">    --version-label <span class="variable">$EB_VERSION_LABEL</span></div></pre></td></tr></table></figure>
<p>Happy Hacking!</p>
<h2 id="GitHub-Repository"><a href="#GitHub-Repository" class="headerlink" title="GitHub Repository"></a>GitHub Repository</h2><p><strong><a href="https://github.com/morizyun/eb-deploy" target="_blank" rel="external">morizyun/eb-deploy - GitHub</a></strong></p>
<h2 id="Special-Thanks"><a href="#Special-Thanks" class="headerlink" title="Special Thanks"></a>Special Thanks</h2><ul>
<li><a href="https://github.com/koding/eb-deploy/blob/master/run.sh" target="_blank" rel="external">koding/eb-deploy: Wercker step for deploying elastic beanstalk</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;I published “wercker step” to deploy an application to Elastic Beanstalk instance using AWS CLI.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/morizyun/eb-deploy&quot;&gt;morizyun/eb-deploy - GitHub&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This aritcle describes how to use the wercker  step and outline of the step.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
